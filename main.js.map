{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blade-driver-selection-row/blade-driver-selection-row.component.html","webpack:///./src/app/blade-driver-selection-row/blade-driver-selection-row.component.scss","webpack:///./src/app/blade-driver-selection-row/blade-driver-selection-row.component.ts","webpack:///./src/app/blade-manager.service.ts","webpack:///./src/app/blade-thumbnail/blade-thumbnail.component.html","webpack:///./src/app/blade-thumbnail/blade-thumbnail.component.scss","webpack:///./src/app/blade-thumbnail/blade-thumbnail.component.ts","webpack:///./src/app/blade-tooltip-content/blade-tooltip-content.component.html","webpack:///./src/app/blade-tooltip-content/blade-tooltip-content.component.scss","webpack:///./src/app/blade-tooltip-content/blade-tooltip-content.component.ts","webpack:///./src/app/db-repository.service.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/game-settings.service.ts","webpack:///./src/app/math.util.ts","webpack:///./src/app/model.ts","webpack:///./src/app/my-game-page/my-game-page.component.html","webpack:///./src/app/my-game-page/my-game-page.component.scss","webpack:///./src/app/my-game-page/my-game-page.component.ts","webpack:///./src/app/my-party-page/my-party-page.component.html","webpack:///./src/app/my-party-page/my-party-page.component.scss","webpack:///./src/app/my-party-page/my-party-page.component.ts","webpack:///./src/app/my-team-page/my-team-page.component.html","webpack:///./src/app/my-team-page/my-team-page.component.scss","webpack:///./src/app/my-team-page/my-team-page.component.ts","webpack:///./src/app/not-found-page/not-found-page.component.html","webpack:///./src/app/not-found-page/not-found-page.component.scss","webpack:///./src/app/not-found-page/not-found-page.component.ts","webpack:///./src/app/party-manager.service.ts","webpack:///./src/app/team-computer.service.ts","webpack:///./src/app/top-navbar/top-navbar.component.html","webpack:///./src/app/top-navbar/top-navbar.component.scss","webpack:///./src/app/top-navbar/top-navbar.component.ts","webpack:///./src/app/xc2-driver-combo-icon/xc2-driver-combo-icon.component.html","webpack:///./src/app/xc2-driver-combo-icon/xc2-driver-combo-icon.component.scss","webpack:///./src/app/xc2-driver-combo-icon/xc2-driver-combo-icon.component.ts","webpack:///./src/app/xc2-element-icon/xc2-element-icon.component.html","webpack:///./src/app/xc2-element-icon/xc2-element-icon.component.scss","webpack:///./src/app/xc2-element-icon/xc2-element-icon.component.ts","webpack:///./src/app/xc2-role-icon/xc2-role-icon.component.html","webpack:///./src/app/xc2-role-icon/xc2-role-icon.component.scss","webpack:///./src/app/xc2-role-icon/xc2-role-icon.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"app\\\" [ngStyle]=\\\"appStyle\\\">\\r\\n  <app-top-navbar></app-top-navbar>\\r\\n  <router-outlet></router-outlet>\\r\\n  <app-footer></app-footer>\\r\\n</div>\\r\\n\"","module.exports = \":host, .app {\\n  display: block;\\n  min-height: 100%; }\\n\\n.app {\\n  background-size: cover;\\n  background-attachment: fixed; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { combineLatest, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, takeUntil } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { GameSettingsService } from './game-settings.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  private unsubscribe = new Subject<void>();\r\n  public appStyle: any = {};\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private gameSettingsService: GameSettingsService,\r\n  ) {\r\n    // Default language\r\n    translateService.setDefaultLang('en');\r\n    translateService.addLangs(['en', 'en-JP']);\r\n    // Current language\r\n    // translateService.use('en');\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.gameSettingsService.siteSettings$\r\n      .pipe(\r\n        takeUntil(this.unsubscribe),\r\n        map(s => s.bgChapter),\r\n        distinctUntilChanged()\r\n      ).subscribe(c => {\r\n        this.appStyle['background-image'] = `url('assets/xc2/chapter-bg/${c}.jpg')`;\r\n      });\r\n\r\n    combineLatest(\r\n      this.gameSettingsService.siteSettings$,\r\n      this.translateService.get('app.spoiler-warning-title'),\r\n      this.translateService.get('app.spoiler-warning'),\r\n      this.translateService.get('app.close-action'),\r\n      this.translateService.get('app.game-copyright'),\r\n      this.translateService.get('app.assets-copyright'),\r\n      this.translateService.get('app.discharge-disclaimer'),\r\n    )\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(([settings, title, messageHtml, close, copyright, copyright2, disclaimer]) => {\r\n        if (!settings.disclaimerClosed) {\r\n          // Show spoiler warning.\r\n          Swal({\r\n            titleText: title,\r\n            html: messageHtml,\r\n            type: 'warning',\r\n            confirmButtonText: close,\r\n            allowOutsideClick: false,\r\n            allowEscapeKey: false,\r\n            width: '40rem',\r\n            backdrop: `\r\n            url(\"assets/xc2/chapter-bg/0.jpg\")\r\n            black\r\n            center/cover\r\n          `,\r\n            footer: `${disclaimer}<br>${copyright}<br>${copyright2}`\r\n          }).then(x => {\r\n            this.gameSettingsService.setSpoiler(true);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { BsDropdownModule, ButtonsModule, TooltipModule } from 'ngx-bootstrap';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { AppComponent } from './app.component';\r\nimport { BladeDriverSelectionRowComponent } from './blade-driver-selection-row/blade-driver-selection-row.component';\r\nimport { BladeThumbnailComponent } from './blade-thumbnail/blade-thumbnail.component';\r\nimport { MyPartyPageComponent } from './my-party-page/my-party-page.component';\r\nimport { MyGamePageComponent } from './my-game-page/my-game-page.component';\r\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\r\nimport { TopNavbarComponent } from './top-navbar/top-navbar.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { MyTeamPageComponent } from './my-team-page/my-team-page.component';\r\nimport { DndModule } from 'ngx-drag-drop';\r\nimport { Xc2ElementIconComponent } from './xc2-element-icon/xc2-element-icon.component';\r\nimport { Xc2RoleIconComponent } from './xc2-role-icon/xc2-role-icon.component';\r\nimport { Xc2DriverComboIconComponent } from './xc2-driver-combo-icon/xc2-driver-combo-icon.component';\r\nimport { BladeTooltipContentComponent } from './blade-tooltip-content/blade-tooltip-content.component';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, \"./assets/i18n/\", \".json\");\r\n}\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'my-game', component: MyGamePageComponent },\r\n  { path: 'my-party', component: MyPartyPageComponent },\r\n  { path: 'my-team', component: MyTeamPageComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: '/my-game',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', component: NotFoundPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TopNavbarComponent,\r\n    MyPartyPageComponent,\r\n    NotFoundPageComponent,\r\n    MyGamePageComponent,\r\n    BladeThumbnailComponent,\r\n    BladeDriverSelectionRowComponent,\r\n    FooterComponent,\r\n    MyTeamPageComponent,\r\n    Xc2ElementIconComponent,\r\n    Xc2RoleIconComponent,\r\n    Xc2DriverComboIconComponent,\r\n    BladeTooltipContentComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ButtonsModule.forRoot(),\r\n    CollapseModule.forRoot(),\r\n    BsDropdownModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      { useHash: true }\r\n      // { enableTracing: true } // <-- debugging purposes only\r\n    ),\r\n    DndModule,\r\n  ],\r\n  providers: [\r\n    { provide: LOCALE_ID, useValue: 'en-US' },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-lg-8 col-md-8 col-sm-6 blade-col\\\">\\r\\n    <app-blade-thumbnail [blade]=\\\"blade\\\" [showRole]=\\\"true\\\" [showDriver]=\\\"true\\\" [showElement]=\\\"true\\\"></app-blade-thumbnail>\\r\\n    <span class=\\\"blade-name\\\">{{'blades.'+blade.id|translate}}</span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\r\\n    <div *ngIf=\\\"!blade.db.unbound\\\" class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Blade driver selection\\\" btnRadioGroup [ngModel]=\\\"blade.boundDriver\\\">\\r\\n      <button type=\\\"button\\\" role=\\\"button\\\" class=\\\"btn character-button\\\" *ngFor=\\\"let driver of drivers$ | async\\\" [disabled]=\\\"!blade.canChangeBoundDriver\\\"\\r\\n        [ngClass]=\\\"{'btn-success': blade.isFound, 'btn-info': !blade.isFound }\\\" [attr.title]=\\\"'drivers.'+driver.id|translate\\\"\\r\\n        [btnRadio]=\\\"driver\\\" (click)=\\\"setDriver(blade, driver.id)\\\">\\r\\n        <div class=\\\"character-img\\\" [ngStyle]=\\\"getButtonStyle(driver.id)\\\"></div>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"blade.db.unbound && (this.defaultDriver$ | async) as defaultDriver\\\" class=\\\"btn-group all-drivers-group\\\" role=\\\"group\\\"\\r\\n      aria-label=\\\"Blade driver selection\\\" btnRadioGroup [ngModel]=\\\"blade.boundDriver\\\">\\r\\n      <button type=\\\"button\\\" role=\\\"button\\\" class=\\\"btn character-button\\\" *ngFor=\\\"let driver of drivers$ | async\\\" [ngClass]=\\\"{'btn-success': blade.isFound, 'btn-info': !blade.isFound }\\\"\\r\\n        [btnRadio]=\\\"defaultDriver\\\" (click)=\\\"setDriver(blade, defaultDriver.id)\\\">\\r\\n        <div class=\\\"character-img\\\" [attr.title]=\\\"'drivers.'+driver.id|translate\\\" [ngStyle]=\\\"getButtonStyle(driver.id)\\\"></div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"blade.db.element === 'HANA' && blade.isFound\\\" class=\\\"col-md-6\\\">\\r\\n    {{'my-game.hana-element'|translate}}\\r\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Blade element selection\\\" btnRadioGroup [ngModel]=\\\"blade.element\\\">\\r\\n      <button type=\\\"button\\\" role=\\\"button\\\" class=\\\"btn element-button btn-default\\\" *ngFor=\\\"let elementId of elements\\\" [attr.title]=\\\"'elements.'+elementId|translate\\\"\\r\\n        [btnRadio]=\\\"elementId\\\" (click)=\\\"setElement(blade, elementId)\\\">\\r\\n        <div class=\\\"element-img\\\" [ngStyle]=\\\"getElementBgStyle(elementId)\\\"></div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"blade.weaponClass.role === 'HANA' && blade.isFound\\\" class=\\\"col-md-6\\\">\\r\\n    {{'my-game.hana-role'|translate}}\\r\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Blade role selection\\\" btnRadioGroup [ngModel]=\\\"blade.role\\\">\\r\\n      <button type=\\\"button\\\" role=\\\"button\\\" class=\\\"btn role-button\\\" *ngFor=\\\"let roleId of roles\\\" [attr.title]=\\\"'roles.'+roleId|translate\\\"\\r\\n        [btnRadio]=\\\"roleId\\\" (click)=\\\"setRole(blade, roleId)\\\">\\r\\n        <div class=\\\"role-img\\\" [ngStyle]=\\\"getRoleBgStyle(roleId)\\\">{{roleId}}</div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".btn-group.all-drivers-group.active .character-img, .btn-group.all-drivers-group.active .role-img, .btn-group.all-drivers-group.active .element-img, .btn-group.all-drivers-group:hover .character-img, .btn-group.all-drivers-group:hover .role-img, .btn-group.all-drivers-group:hover .element-img {\\n  opacity: 1; }\\n\\n.character-button {\\n  height: 56px; }\\n\\n.blade-name {\\n  margin-left: 10px; }\\n\\n.character-button, .element-button, .role-button {\\n  padding: 0; }\\n\\n.character-button .character-img, .character-button .element-img, .character-button .role-img, .element-button .character-img, .element-button .element-img, .element-button .role-img, .role-button .character-img, .role-button .element-img, .role-button .role-img {\\n    opacity: 0.3;\\n    background-size: contain; }\\n\\n.character-button .character-img, .element-button .character-img, .role-button .character-img {\\n    display: inline-block;\\n    height: 56px;\\n    width: 56px; }\\n\\n.character-button .element-img, .element-button .element-img, .role-button .element-img {\\n    height: 28px;\\n    width: 28px; }\\n\\n.character-button .role-img, .element-button .role-img, .role-button .role-img {\\n    height: 28px;\\n    padding: 0 3px;\\n    font-weight: bold; }\\n\\n.character-button.active .character-img, .character-button.active .role-img, .character-button.active .element-img, .character-button:hover .character-img, .character-button:hover .role-img, .character-button:hover .element-img, .element-button.active .character-img, .element-button.active .role-img, .element-button.active .element-img, .element-button:hover .character-img, .element-button:hover .role-img, .element-button:hover .element-img, .role-button.active .character-img, .role-button.active .role-img, .role-button.active .element-img, .role-button:hover .character-img, .role-button:hover .role-img, .role-button:hover .element-img {\\n    opacity: 1; }\\n\\n.blade-col {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center; }\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, filter } from 'rxjs/operators';\r\nimport { DbRepositoryService } from '../db-repository.service';\r\nimport { GameSettingsService } from '../game-settings.service';\r\nimport { DriverCharaId, ElementId, elements, RoleId, roles, Blade, Driver } from '../model';\r\nimport { BladeManagerService } from '../blade-manager.service';\r\n\r\n@Component({\r\n  selector: 'app-blade-driver-selection-row',\r\n  templateUrl: './blade-driver-selection-row.component.html',\r\n  styleUrls: ['./blade-driver-selection-row.component.scss']\r\n})\r\nexport class BladeDriverSelectionRowComponent implements OnInit {\r\n\r\n  @Input() public blade: Blade;\r\n\r\n  public drivers$: Observable<Driver[]>;\r\n  public defaultDriver$: Observable<Driver>;\r\n  public elements = elements;\r\n  public roles = roles;\r\n\r\n  constructor(\r\n    private dbService: DbRepositoryService,\r\n    private settingsService: GameSettingsService,\r\n    private bladeMgrService: BladeManagerService,\r\n  ) {\r\n    this.drivers$ = combineLatest(\r\n      bladeMgrService.allDrivers$,\r\n      settingsService.gameSettings$\r\n    ).pipe(\r\n      map(([drivers, gameSettings]) => {\r\n        return drivers\r\n          .filter(d => d.db.chapter <= gameSettings.c\r\n            && this.canBind(this.blade, d.id));\r\n      })\r\n    );\r\n    this.defaultDriver$ = bladeMgrService.allDrivers$.pipe(\r\n      map((drivers) => drivers.find(x => x.id === 'REX'))\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public setDriver(blade: Blade, driverId: DriverCharaId) {\r\n    if (blade.boundDriver && driverId === blade.boundDriver.id) {\r\n      // Toggle to unbound\r\n      this.settingsService.removeBlade(blade.id);\r\n    } else if (this.canBind(blade, driverId)) {\r\n      this.settingsService.addBlade(blade.id, driverId);\r\n    }\r\n  }\r\n\r\n  // TODO: staticify that and put it near the Blade interface?\r\n  public canBind(blade: Blade, driverId: DriverCharaId) {\r\n    // Remember Binding !== Engaging\r\n    // Master Driver Rex can *engage* almost any blade without *binding* to them\r\n    switch (blade.bladeType) {\r\n      case 'SEIHAI':\r\n        // Only Rex can bind to the Aegis\r\n        return driverId === 'REX';\r\n      default:\r\n        // Defer to the exclusiveDriver prop of the Blade\r\n        if (blade.exclusiveDriver) {\r\n          return driverId === blade.exclusiveDriver;\r\n        } else {\r\n          // All other blades can bind to anybody but Tora\r\n          // (Except Shulk/Fiora? Gotta check that)\r\n          return blade.canChangeBoundDriver && driverId !== 'TORA';\r\n        }\r\n    }\r\n  }\r\n\r\n  public getButtonStyle(driverId: DriverCharaId) {\r\n    return {\r\n      'background-image': `url('assets/xc2/driver_icons/${driverId}.png')`\r\n    };\r\n  }\r\n\r\n  public setElement(blade: Blade, elementId: ElementId) {\r\n    this.settingsService.addBlade(\r\n      blade.id,\r\n      blade.boundDriver.id,\r\n      elementId,\r\n      blade.role\r\n    );\r\n  }\r\n\r\n  public setRole(blade: Blade, roleId: RoleId) {\r\n    this.settingsService.addBlade(\r\n      blade.id,\r\n      blade.boundDriver.id,\r\n      blade.element,\r\n      roleId\r\n    );\r\n  }\r\n\r\n  public getElementBgStyle(elementId: ElementId) {\r\n    return {\r\n      'background-image': `url('assets/xc2/elements/${elementId}.png')`\r\n    };\r\n  }\r\n\r\n  public getRoleBgStyle(roleId: RoleId) {\r\n    return {\r\n      // 'background-image': `url('assets/xc2/roles/${roleId}.png')`\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, share, distinctUntilChanged, filter } from 'rxjs/operators';\r\nimport { DbRepositoryService } from './db-repository.service';\r\nimport { GameSettingsService } from './game-settings.service';\r\nimport { Blade, Driver, DriverCharaId, elements, roles, bladeTypes, driverCombos } from './model';\r\nimport { isEqual, sortBy, uniq, flatten } from 'lodash';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\nexport type BladeGroupingType = 'NONE' | 'ACQUISITION' | 'BLADETYPE' | 'DRIVER' | 'ELEMENT' | 'ROLE';\r\nexport type BladeOrderingType = 'ALBUM' | 'NAME' | 'DRIVER' | 'ELEMENT' | 'ROLE' | 'WEAPON';\r\n\r\nexport const bladeGroupingTypes: BladeGroupingType[] = [\r\n  'NONE', 'ACQUISITION', 'BLADETYPE', 'DRIVER', 'ELEMENT', 'ROLE'\r\n];\r\n\r\nexport const bladeOrderingTypes: BladeOrderingType[] = [\r\n  'ALBUM', 'NAME', 'DRIVER', 'ELEMENT', 'ROLE', 'WEAPON'\r\n];\r\n\r\nexport interface BladeGroup {\r\n  labelKey: string;\r\n  blades: Blade[];\r\n  isHidden: boolean;\r\n}\r\n\r\nconst bladeOrderKeySelectors: { [t: string]: (b: Blade) => number | string } = {\r\n  'ALBUM': (b) => b.db.albumNumber,\r\n  'NAME': (b) => b.id, // We don't have translations here.\r\n  'DRIVER': (b) => b.boundDriver ? b.boundDriver.db.sortIdx : 999,\r\n  'ELEMENT': (b) => elements.indexOf(b.element),\r\n  'ROLE': (b) => roles.indexOf(b.role),\r\n  'WEAPON': (b) => b.weaponClass.sortIdx,\r\n};\r\n\r\nfunction orderBlades(blades: Blade[], tlService: TranslateService, sortOrder: BladeOrderingType): Blade[] {\r\n  if (sortOrder === 'NAME') {\r\n    const f: (b: Blade) => string = (b) => tlService.instant('blades.' + b.id).toLowerCase();\r\n    return sortBy(blades, f);\r\n  } else {\r\n    return sortBy(blades, bladeOrderKeySelectors[sortOrder]);\r\n  }\r\n}\r\n\r\nfunction filterBlades(blades: Blade[], index: { [phrase: string]: string[] }, searchFilter: string): Blade[] {\r\n  searchFilter = searchFilter ? searchFilter.trim() : '';\r\n\r\n  if (searchFilter) {\r\n    const matchedBladeIds: string[] = uniq(flatten(\r\n      Object.keys(index) // From all phrases\r\n        .filter(s => s.includes(searchFilter)) // Take phrases that match the filter\r\n        .map(k => index[k]) // Select blade IDs from index\r\n    )); // De-duplicated in uniq call\r\n\r\n    // Map and filter blade IDs\r\n    return blades.filter(b => matchedBladeIds.indexOf(b.id) >= 0 && !b.isHidden);\r\n  } else {\r\n    return blades.filter(b => !b.isHidden);\r\n  }\r\n\r\n}\r\n\r\nfunction createOrAddIndexPhrase(index: { [phrase: string]: string[] }, b: Blade, phrase: string) {\r\n  phrase = phrase.trim().toLowerCase();\r\n  if (phrase) {\r\n    if (index[phrase] && index[phrase].indexOf(b.id) < 0) {\r\n      index[phrase].push(b.id);\r\n    } else {\r\n      index[phrase] = [b.id];\r\n    }\r\n  }\r\n  return index;\r\n}\r\n\r\nfunction generateBladeSearchIndex(blades: Blade[], tlService: TranslateService): { [phrase: string]: string[] } {\r\n  if (!tlService || !tlService.currentLang) {\r\n    return {};\r\n  }\r\n  const index: { [phrase: string]: string[] } = {};\r\n\r\n  for (let i = 0; i < blades.length; i++) {\r\n    const b = blades[i];\r\n    // Match blade ID\r\n    createOrAddIndexPhrase(index, b, b.id);\r\n    // Match TL name\r\n    createOrAddIndexPhrase(index, b, tlService.instant('blades.' + b.id));\r\n    // Match aliases\r\n    for (let j = 0; j < b.aliases.length; j++) {\r\n      createOrAddIndexPhrase(index, b, b.aliases[j]);\r\n    }\r\n    // Match bound driver TL name\r\n    if (b.boundDriver) {\r\n      createOrAddIndexPhrase(index, b, tlService.instant('drivers.' + b.boundDriver.id));\r\n    }\r\n    // Match elment, weapon, and role TL names\r\n    createOrAddIndexPhrase(index, b, tlService.instant('elements.' + b.element));\r\n    createOrAddIndexPhrase(index, b, tlService.instant('weapons.' + b.weaponClass.id));\r\n    createOrAddIndexPhrase(index, b, tlService.instant('roles.' + b.role));\r\n  }\r\n  return index;\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BladeManagerService {\r\n  private _blades$: BehaviorSubject<Blade[]> = new BehaviorSubject([]);\r\n  private _drivers$: BehaviorSubject<Driver[]> = new BehaviorSubject([]);\r\n\r\n  private _sortOrder$: BehaviorSubject<BladeOrderingType> = new BehaviorSubject<BladeOrderingType>('ALBUM');\r\n  private _grouping$: BehaviorSubject<BladeGroupingType> = new BehaviorSubject<BladeGroupingType>('NONE');\r\n  private _searchFilter$: BehaviorSubject<string> = new BehaviorSubject<string>(undefined);\r\n\r\n  private bladeMapSubscription: Subscription;\r\n  private searchIndexSubscription: Subscription;\r\n\r\n  public allDrivers$: Observable<Driver[]> = this._drivers$.pipe(filter((a) => a.length > 0));\r\n  public sortOrder$: Observable<BladeOrderingType> = this._sortOrder$.asObservable();\r\n  public grouping$: Observable<BladeGroupingType> = this._grouping$.asObservable();\r\n  public searchFilter$: Observable<string> = this._searchFilter$.asObservable();\r\n  public groupedBlades$: Observable<BladeGroup[]>;\r\n\r\n  private _bladeSearchIndex$: BehaviorSubject<{ [phrase: string]: string[] }> = new BehaviorSubject({});\r\n\r\n  // Used for triggering recompute of filter on lang change.\r\n  private lang$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n\r\n  public allBlades$: Observable<Blade[]> = this._blades$.pipe(\r\n    filter((a) => a.length > 0),\r\n  );\r\n\r\n  public ungroupedBlades$: Observable<Blade[]> = combineLatest(\r\n    this._blades$,\r\n    this._sortOrder$,\r\n    this._searchFilter$,\r\n    this._bladeSearchIndex$,\r\n  ).pipe(\r\n    filter((a) => a.length > 0),\r\n    map(([blades, sortOrder, searchFilter, index]) => {\r\n      const filteredBlades = filterBlades(blades, index, searchFilter);\r\n      return orderBlades(\r\n        filteredBlades,\r\n        this.tlService,\r\n        sortOrder);\r\n    })\r\n  );\r\n\r\n  constructor(\r\n    private dbService: DbRepositoryService,\r\n    private gameSettingsService: GameSettingsService,\r\n    private tlService: TranslateService,\r\n  ) {\r\n    // Build blade and driver map from DB+Settings\r\n    this.bladeMapSubscription = this.subscribeBladeMap();\r\n    // Subscribe to search index updates\r\n    this.searchIndexSubscription = this.subscribeSearchIndex();\r\n    this.groupedBlades$ = this.buildGroupedBladesObservable();\r\n    this.lang$.next(this.tlService.currentLang);\r\n    this.tlService.onLangChange.asObservable().subscribe(l => {\r\n      this.lang$.next(l.lang);\r\n    });\r\n  }\r\n\r\n  public setGrouping(grouping: BladeGroupingType) {\r\n    this._grouping$.next(grouping);\r\n  }\r\n\r\n\r\n  public setOrdering(ordering: BladeOrderingType) {\r\n    this._sortOrder$.next(ordering);\r\n  }\r\n\r\n\r\n  public setSearchFilter(searchFilter: string) {\r\n    this._searchFilter$.next(searchFilter);\r\n  }\r\n\r\n  private subscribeSearchIndex(): Subscription {\r\n    return combineLatest(\r\n      this._blades$,\r\n      this.lang$.pipe(distinctUntilChanged()), // Rebuild on lang change\r\n    ).pipe(\r\n      map(([blades]) => {\r\n        return generateBladeSearchIndex(blades, this.tlService);\r\n      })\r\n    ).subscribe((f) => {\r\n      this._bladeSearchIndex$.next(f);\r\n    });\r\n  }\r\n\r\n  private buildGroupedBladesObservable(): Observable<BladeGroup[]> {\r\n    return combineLatest(\r\n      this._blades$,\r\n      this._drivers$,\r\n      this._sortOrder$,\r\n      this._grouping$,\r\n      this._searchFilter$,\r\n      this._bladeSearchIndex$\r\n    ).pipe(\r\n      map(([allBlades, allDrivers, sortOrder, grouping, searchFilter, index]) => {\r\n        const filteredBlades = filterBlades(allBlades, index, searchFilter);\r\n\r\n        switch (grouping) {\r\n          case 'ACQUISITION':\r\n            // Separate by acquisition:\r\n            // Quest blades, gacha blades, and story blades.\r\n            return [\r\n              {\r\n                labelKey: 'my-game.quest-blades',\r\n                blades: orderBlades(\r\n                  filteredBlades.filter(x => x.bladeType === 'QUEST'),\r\n                  this.tlService,\r\n                  sortOrder),\r\n                isHidden: false\r\n              },\r\n              {\r\n                labelKey: 'my-game.gacha-blades',\r\n                blades: orderBlades(\r\n                  filteredBlades.filter(x => x.bladeType === 'GACHA'),\r\n                  this.tlService,\r\n                  sortOrder),\r\n                isHidden: false\r\n              },\r\n              {\r\n                labelKey: 'my-game.gacha-blades',\r\n                blades: orderBlades(\r\n                  filteredBlades.filter(x =>\r\n                    x.bladeType === 'STORY' // Story blades (Roc, Aegaeon, Nia)\r\n                    || x.bladeType === 'CHARA' // Character Blades (Dromarch, Brighid, Pandoria)\r\n                    || x.bladeType === 'SEIHAI' // Aegis forms\r\n                  ),\r\n                  this.tlService,\r\n                  sortOrder),\r\n                isHidden: false\r\n              }\r\n            ];\r\n          case 'BLADETYPE':\r\n            return bladeTypes.map((bt) => {\r\n              return {\r\n                labelKey: 'blade-types.' + bt,\r\n                blades: orderBlades(\r\n                  filteredBlades.filter(x => x.bladeType === bt),\r\n                  this.tlService,\r\n                  sortOrder),\r\n                isHidden: false\r\n              };\r\n            });\r\n          case 'DRIVER':\r\n            return allDrivers.map((d) => {\r\n              return {\r\n                labelKey: 'drivers.' + d.id,\r\n                blades: orderBlades(\r\n                  filteredBlades.filter(x => x.boundDriver === d),\r\n                  this.tlService,\r\n                  sortOrder),\r\n                isHidden: d.isHidden\r\n              };\r\n            }).concat({\r\n              labelKey: 'app.no-driver',\r\n              blades: orderBlades(\r\n                filteredBlades.filter(x => x.boundDriver === undefined),\r\n                this.tlService,\r\n                sortOrder),\r\n              isHidden: false\r\n            });\r\n          case 'ELEMENT':\r\n            return elements.map((elementId) => {\r\n              return {\r\n                labelKey: 'elements.' + elementId,\r\n                blades: orderBlades(\r\n                  filteredBlades.filter(x => x.element === elementId),\r\n                  this.tlService,\r\n                  sortOrder),\r\n                isHidden: false\r\n              };\r\n            });\r\n          case 'ROLE':\r\n            return roles.map((roleId) => {\r\n              return {\r\n                labelKey: 'roles.' + roleId,\r\n                blades: orderBlades(\r\n                  filteredBlades.filter(x => x.role === roleId),\r\n                  this.tlService,\r\n                  sortOrder),\r\n                isHidden: false\r\n              };\r\n            });\r\n          default:\r\n            // No grouping: Return all you guys!\r\n            return [{\r\n              labelKey: 'app.all-blades',\r\n              blades: orderBlades(filteredBlades, this.tlService, sortOrder),\r\n              isHidden: false\r\n            }];\r\n        }\r\n      }),\r\n      share(),\r\n    );\r\n  }\r\n\r\n  private subscribeBladeMap() {\r\n    return combineLatest(\r\n      this.dbService.dbStore$,\r\n      this.gameSettingsService.gameSettings$.pipe(\r\n        distinctUntilChanged((currentSettings, newSettings) => {\r\n          // Only rebuild if these settings changed\r\n          return currentSettings.c === newSettings.c\r\n            && currentSettings.e === newSettings.e\r\n            && isEqual(currentSettings.b, newSettings.b);\r\n        })\r\n      ),\r\n    ).pipe(\r\n      map(([dbStore, gameSettings]) => {\r\n        const blades: Blade[] = [];\r\n        const drivers: Driver[] = [];\r\n\r\n        const bladeMap: { [id: string]: Blade } = {};\r\n        const driverMap: { [id: string]: Driver } = {};\r\n\r\n        // Build Driver map\r\n        dbStore.drivers.forEach(d => {\r\n          const driver: Driver = {\r\n            id: d.id,\r\n            boundBlades: [],\r\n            isHidden: gameSettings.c < d.chapter,\r\n            db: d,\r\n          };\r\n\r\n          driverMap[d.id] = driver;\r\n          drivers.push(driver);\r\n        });\r\n\r\n        // Build Blade map\r\n        dbStore.blades.forEach(dbBlade => {\r\n          // Load settings/weapons\r\n          const gameSettingsBlade = gameSettings.b.find(x => x.b === dbBlade.id);\r\n          const weapon = dbStore.weapons.find(x => x.id === dbBlade.weapon);\r\n          if (!weapon) {\r\n            throw new Error(`Weapon ${dbBlade.weapon} was not found in weapons DB`);\r\n          }\r\n\r\n          // Create base Blade\r\n          const b: Blade = {\r\n            id: dbBlade.id,\r\n            db: dbBlade,\r\n            role: weapon.role, // Overridden below\r\n            exclusiveDriver: dbBlade.exclusiveDriver ? <DriverCharaId>dbBlade.exclusiveDriver : undefined,\r\n            bladeType: dbBlade.type ? dbBlade.type : 'GACHA',\r\n            element: dbBlade.element,\r\n            boundDriver: gameSettingsBlade ? driverMap[gameSettingsBlade.d] : undefined,\r\n            minChapter: dbBlade.chapter ? dbBlade.chapter : 2, // Default to chapter 2\r\n            driverCombos: [], // Overridden below\r\n            isFound: false, // Overridden below\r\n            isHidden: true, // Overridden below\r\n            weaponClass: weapon,\r\n            thumbUrl: `assets/xc2/diamond_portraits/${dbBlade.id}.png`,\r\n            aliases: dbBlade.aliases ? dbBlade.aliases : [],\r\n            requiresExpansionPass: dbBlade.requiresExpansionPass ? true : false,\r\n            canChangeBoundDriver: true\r\n          };\r\n\r\n          // Add Blade to collection\r\n          blades.push(b);\r\n          bladeMap[dbBlade.id] = b;\r\n\r\n          // Post-process Blade\r\n          b.isHidden = (\r\n            // Blade Chapter not reached yet\r\n            gameSettings.c < b.minChapter\r\n          ) || (\r\n              // Blade requires Expansion pass, but it's disabled\r\n              b.requiresExpansionPass && !gameSettings.e\r\n            );\r\n\r\n          // Special Blades don't need an entry in the registered blades\r\n          // to be bound and displayed\r\n          b.isFound = (b.bladeType === 'CHARA'\r\n            || b.bladeType === 'SEIHAI'\r\n            || b.bladeType === 'STORY'\r\n          ) && (gameSettings.c >= b.minChapter);\r\n\r\n          // Special blades can't rebind\r\n          b.canChangeBoundDriver = (\r\n            b.bladeType !== 'CHARA'\r\n            && b.bladeType !== 'SEIHAI'\r\n            && b.bladeType !== 'STORY'\r\n          );\r\n\r\n          // Reset bound driver by force, if necessary\r\n          if (!b.canChangeBoundDriver && b.exclusiveDriver) {\r\n            b.boundDriver = driverMap[b.exclusiveDriver];\r\n          }\r\n\r\n          // Poppi special!\r\n          let overrideElement = gameSettingsBlade ? gameSettingsBlade.e : undefined;\r\n          let overrideRole = gameSettingsBlade ? gameSettingsBlade.r : undefined;\r\n\r\n          // Poppi defaults!\r\n          if (dbBlade.element === 'HANA' && !overrideRole) {\r\n            overrideRole = 'TNK';\r\n          }\r\n          if (b.role === 'HANA' && !overrideElement) {\r\n            switch (b.id) {\r\n              case 'HANA_JS':\r\n                overrideElement = 'EARTH';\r\n                break;\r\n              case 'HANA_JK':\r\n                overrideElement = 'FIRE';\r\n                break;\r\n              case 'HANA_JD':\r\n                overrideElement = 'ICE';\r\n                break;\r\n            }\r\n          }\r\n\r\n          if (overrideElement) {\r\n            b.element = overrideElement;\r\n          }\r\n          if (overrideRole) {\r\n            b.role = overrideRole;\r\n          }\r\n\r\n          // Map registered blades\r\n          if (gameSettingsBlade) {\r\n            b.isFound = true;\r\n          }\r\n\r\n          // Map Driver Combos for every Driver\r\n          // Exclude N/A and Unknown\r\n          Object.keys(b.weaponClass.driverCombos).forEach(driverId => {\r\n            const combos = b.weaponClass.driverCombos[driverId]\r\n              .filter(c => driverCombos.indexOf(c) >= 0);\r\n            if(combos.length > 0) {\r\n              b.driverCombos.push({\r\n                driverId: <DriverCharaId>driverId,\r\n                combos: combos,\r\n              });\r\n            }\r\n          })\r\n\r\n          if (dbBlade.missingImg) {\r\n            b.thumbUrl = `assets/xc2/diamond_portraits/WHOS-THAT-BLADE.png`;\r\n          }\r\n\r\n          // Replace image for not-found blades\r\n          if (!b.isFound) {\r\n            b.thumbUrl = `assets/xc2/diamond_portraits/NOTHING-TO-SEE-HERE.png`;\r\n          }\r\n\r\n          // Add to relevant driver\r\n          // Unbound blades like Poppibuster, Shulk and Fiora\r\n          // can engage to everybody except Tora, but aren't technically bound.\r\n          if (b.boundDriver && !b.db.unbound) {\r\n            b.boundDriver.boundBlades.push(b);\r\n          }\r\n        });\r\n\r\n        return { blades, drivers };\r\n      }),\r\n    ).subscribe(({ blades, drivers }) => {\r\n      this._blades$.next(blades);\r\n      this._drivers$.next(drivers);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"blade-thumbnail\\\" [tooltip]=\\\"blade ? tooltipContentTemplate : undefined\\\" placement=\\\"auto\\\" container=\\\"body\\\" containerClass=\\\"blade-tooltip\\\" [ngClass]=\\\"{'no-role': !showRole, 'no-element': !showElement, 'no-driver': !showDriver}\\\">\\r\\n  <ng-container *ngIf=\\\"blade\\\">\\r\\n    <div [hidden]=\\\"!blade.isFound || !showRole\\\" class=\\\"role\\\" [attr.title]=\\\"('roles.'+blade.role|translate) + ' (' + ('weapons.'+blade.weaponClass.id|translate)  + ')'\\\"\\r\\n      [ngClass]=\\\"blade.role\\\">\\r\\n      <xc2-role-icon [role]=\\\"blade.role\\\"></xc2-role-icon>\\r\\n    </div>\\r\\n    <div [hidden]=\\\"!blade.isFound || !showElement\\\" class=\\\"bgimg element\\\" [attr.title]=\\\"'elements.'+blade.element|translate\\\" [ngStyle]=\\\"{'backgroundImage': 'url(assets/xc2/elements/'+blade.element+'.png)'}\\\"></div>\\r\\n    <div class=\\\"bgimg portrait\\\" [attr.title]=\\\"'#'+ blade.db.albumNumber + ': ' +('blades.'+blade.id|translate)\\\" [ngStyle]=\\\"{'backgroundImage': 'url('+blade.thumbUrl+')'}\\\"></div>\\r\\n    <div class=\\\"role-bg\\\"></div>\\r\\n    <div *ngIf=\\\"blade.boundDriver && !blade.db.unbound && showDriver\\\" class=\\\"bgimg driver-portrait\\\" [attr.title]=\\\"'drivers.'+blade.boundDriver.id|translate\\\"\\r\\n      [ngStyle]=\\\"{'backgroundImage': 'url(assets/xc2/driver_icons/'+blade.boundDriver.id+'.png)'}\\\"></div>\\r\\n  </ng-container>\\r\\n  <ng-container *ngIf=\\\"!blade\\\">\\r\\n    <img class=\\\"portrait\\\" src=\\\"assets/xc2/diamond_portraits/NOTHING-TO-SEE-HERE.png\\\">\\r\\n  </ng-container>\\r\\n</div>\\r\\n<ng-template #tooltipContentTemplate>\\r\\n  <app-blade-tooltip-content [blade]=\\\"blade\\\"></app-blade-tooltip-content>\\r\\n</ng-template>\"","module.exports = \":host, .blade-thumbnail {\\n  display: inline-block;\\n  height: 56px; }\\n\\n.blade-thumbnail {\\n  width: 84px; }\\n\\n.blade-thumbnail.no-role.no-element, .blade-thumbnail .no-driver {\\n    width: 70px; }\\n\\n.blade-thumbnail.no-role.no-element.no-driver {\\n    width: 56px; }\\n\\n.blade-thumbnail {\\n  position: relative;\\n  z-index: 10; }\\n\\n.blade-thumbnail .portrait {\\n    position: absolute;\\n    left: 14px;\\n    height: 56px;\\n    width: 56px;\\n    z-index: 11; }\\n\\n.blade-thumbnail.no-role.no-element .portrait {\\n    left: 0; }\\n\\n.blade-thumbnail .element {\\n    position: absolute;\\n    top: 28px;\\n    left: 0;\\n    height: 28px;\\n    width: 28px;\\n    z-index: 12; }\\n\\n.blade-thumbnail .driver-portrait {\\n    position: absolute;\\n    top: 28px;\\n    left: 56px;\\n    height: 28px;\\n    width: 28px;\\n    z-index: 13; }\\n\\n.blade-thumbnail .role {\\n    cursor: default;\\n    position: absolute;\\n    z-index: 15;\\n    left: 0;\\n    top: 5px;\\n    height: 28px;\\n    width: 28px;\\n    text-align: center;\\n    text-shadow: 0px 0px 3px black;\\n    font-weight: bold; }\\n\\n.blade-thumbnail .role.ATK {\\n      color: red; }\\n\\n.blade-thumbnail .role.TNK {\\n      color: blue; }\\n\\n.blade-thumbnail .role.HLR {\\n      color: lime; }\\n\\n.bgimg {\\n  display: inline-block;\\n  background-size: contain; }\\n\\n:host ::ng-deep .tooltip-inner {\\n  max-width: 500px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Blade } from '../model';\r\n\r\n@Component({\r\n  selector: 'app-blade-thumbnail',\r\n  templateUrl: './blade-thumbnail.component.html',\r\n  styleUrls: ['./blade-thumbnail.component.scss']\r\n})\r\nexport class BladeThumbnailComponent implements OnInit {\r\n\r\n  @Input() public blade: Blade;\r\n  @Input() public showDriver: boolean;\r\n  @Input() public showElement: boolean;\r\n  @Input() public showRole: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public onDragStart() {\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"blade-tooltip-content\\\" *ngIf=\\\"blade\\\">\\r\\n  <div class=\\\"d-flex flex-nowrap flex-column\\\">\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\">\\r\\n      <div class=\\\"bgimg portrait\\\" [ngStyle]=\\\"{'backgroundImage': 'url('+blade.thumbUrl+')'}\\\"></div>\\r\\n      <div class=\\\"title-container d-flex flex-nowrap flex-column align-items-stretch\\\">\\r\\n        <div class=\\\"title\\\">{{'blades.'+blade.id|translate}}</div>\\r\\n        <div class=\\\"subtitle d-flex flex-nowrap flex-row align-items-center\\\" *ngIf=\\\"blade.isFound && !blade.isHidden\\\">\\r\\n          <xc2-element-icon [element]=\\\"blade.element\\\"></xc2-element-icon>\\r\\n          <span>{{'elements.'+blade.element|translate}}</span>\\r\\n          <xc2-role-icon [role]=\\\"blade.role\\\"></xc2-role-icon>\\r\\n          <span>{{'roles.'+blade.role|translate}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"subtitle\\\">{{'blade-types.'+blade.bladeType|translate}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"properties d-flex flex-nowrap flex-column\\\">\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\" *ngIf=\\\"blade.isFound && !blade.isHidden\\\">\\r\\n      <div class=\\\"property-name\\\">{{'blade-props.weapon'|translate}}</div>\\r\\n      <div class=\\\"property-value\\\">\\r\\n        {{'weapons.'+blade.weaponClass.id|translate}}\\r\\n        <xc2-role-icon [role]=\\\"blade.role\\\"></xc2-role-icon>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\" *ngIf=\\\"blade.driverCombos.length > 0\\\">\\r\\n      <div class=\\\"property-name wrap-text\\\">\\r\\n        {{'blade-props.driver-combos'|translate}}\\r\\n        <span *ngFor=\\\"let dc of blade.driverCombos\\\">\\r\\n          {{'drivers.'+dc.driverId|translate}}\\r\\n          <xc2-driver-combo-icon *ngFor=\\\"let c of dc.combos\\\" [driverCombo]=\\\"c\\\"></xc2-driver-combo-icon>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\" *ngIf=\\\"blade.isFound && !blade.isHidden\\\">\\r\\n      <div class=\\\"property-name\\\">{{'blade-props.stat-modifier'|translate}}</div>\\r\\n      <div class=\\\"property-value\\\" *ngIf=\\\"blade.db.modifier\\\">\\r\\n        {{'modifiers.'+blade.db.modifier.id|translate}} +{{blade.db.modifier.value}}%\\r\\n      </div>\\r\\n      <div class=\\\"property-value\\\" *ngIf=\\\"!blade.db.modifier && blade.db.element === 'HANA'\\\">\\r\\n        {{'blade-props.stat-modifier-poppi'|translate}}\\r\\n      </div>\\r\\n      <div class=\\\"property-value\\\" *ngIf=\\\"!blade.db.modifier && blade.db.element !== 'HANA'\\\">\\r\\n        {{'blade-props.stat-modifier-unknown'|translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\" *ngIf=\\\"blade.exclusiveDriver && blade.isFound && !blade.isHidden\\\">\\r\\n      <div class=\\\"property-name\\\">{{'blade-props.exclusive-driver'|translate}}</div>\\r\\n      <div class=\\\"property-value\\\">{{'drivers.'+blade.exclusiveDriver|translate}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\" *ngIf=\\\"blade.db.requiresExpansionPass\\\">\\r\\n      <div class=\\\"property-name\\\">\\r\\n        {{'blade-props.requires-expansion-pass'|translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\" *ngIf=\\\"blade.db.unbound && blade.isFound && !blade.isHidden\\\">\\r\\n      <div class=\\\"property-name \\\">\\r\\n        {{'blade-props.unbound'|translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\" *ngIf=\\\"blade.minChapter && ( blade.bladeType !== 'GACHA' || blade.minChapter > 10 )\\\">\\r\\n      <div class=\\\"property-name\\\" *ngIf=\\\"blade.minChapter < 11\\\">\\r\\n        {{('blade-props.availability-chapter'|translate:{c:blade.minChapter})}}\\r\\n      </div>\\r\\n      <div class=\\\"property-name\\\" *ngIf=\\\"blade.minChapter === 11\\\">\\r\\n        {{'blade-props.availability-chapter-11'|translate}}\\r\\n      </div>\\r\\n      <div class=\\\"property-name\\\" *ngIf=\\\"blade.minChapter > 11\\\">\\r\\n        {{'blade-props.availability-chapter-12'|translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\" *ngIf=\\\"blade.bladeType === 'QUEST'\\\">\\r\\n      <div class=\\\"property-name wrap-text\\\">\\r\\n        {{'blade-acquisition.'+blade.id|translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex flex-nowrap flex-row\\\" *ngIf=\\\"blade.db.element === 'HANA'\\\">\\r\\n      <div class=\\\"property-name wrap-text\\\">\\r\\n        {{'blade-props.poppi-notice'|translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \":host {\\n  text-align: left;\\n  white-space: nowrap;\\n  text-overflow: ellipsis; }\\n  :host .bgimg {\\n    background-size: contain;\\n    background-repeat: no-repeat; }\\n  :host .portrait {\\n    height: 66px;\\n    width: 66px; }\\n  :host .title {\\n    font-size: 1.1rem;\\n    font-weight: bold;\\n    font-style: italic; }\\n  :host .property-name {\\n    margin-right: 5px;\\n    color: #eee; }\\n  :host .property-value {\\n    font-weight: bold; }\\n  :host .wrap-text {\\n    white-space: normal;\\n    text-overflow: ellipsis; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Blade } from '../model';\r\n\r\n@Component({\r\n  selector: 'app-blade-tooltip-content',\r\n  templateUrl: './blade-tooltip-content.component.html',\r\n  styleUrls: ['./blade-tooltip-content.component.scss']\r\n})\r\nexport class BladeTooltipContentComponent implements OnInit {\r\n\r\n  @Input() public blade: Blade;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { first, map, withLatestFrom, filter } from 'rxjs/operators';\r\nimport { DbBlade, DbStore, DbWeaponClass, driverCharacters } from './model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DbRepositoryService {\r\n\r\n  private bladesJsonUrl = 'assets/db/blades.json';\r\n  private weaponClassesJsonUrl = 'assets/db/weapons.json';\r\n\r\n  private _loading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n  private _dbStore$: BehaviorSubject<DbStore> = new BehaviorSubject<DbStore>({\r\n    weapons: [],\r\n    blades: [],\r\n    drivers: [],\r\n  });\r\n\r\n  public loading$: Observable<boolean> = this._loading$.asObservable();\r\n  public dbStore$: Observable<DbStore> = combineLatest(\r\n    this._dbStore$,\r\n    this._loading$\r\n  ).pipe(\r\n    filter(([_, loading]) => !loading),\r\n    map(([store, _]) => store),\r\n  );\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    this.loadFiles();\r\n  }\r\n\r\n  private loadFiles() {\r\n    this._loading$.next(true);\r\n    this.getDbFiles().pipe(\r\n      first(),\r\n    ).subscribe(\r\n      (store) => {\r\n        this._dbStore$.next(store);\r\n        this._loading$.next(false);\r\n      },\r\n      (err) => {\r\n        this._loading$.next(false);\r\n        console.error(err);\r\n        alert(err);\r\n      },\r\n    );\r\n  }\r\n\r\n  private getDbFiles(): Observable<DbStore> {\r\n    return combineLatest(\r\n      this.getDbWeapons(),\r\n      this.getDbBlades()\r\n    ).pipe(\r\n      map(([weapons, blades]) => {\r\n        return {\r\n          weapons,\r\n          blades,\r\n          drivers: driverCharacters,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private getDbWeapons(): Observable<DbWeaponClass[]> {\r\n    return this.http.get(this.weaponClassesJsonUrl)\r\n      .pipe(map((obj: { weapons: DbWeaponClass[] }) => obj.weapons));\r\n  }\r\n\r\n  private getDbBlades(): Observable<DbBlade[]> {\r\n    return this.http.get(this.bladesJsonUrl)\r\n      .pipe(map((obj: { blades: DbBlade[] }) => obj.blades));\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"footer-container\\\">\\r\\n  <div class=\\\"footer-bg\\\"></div>\\r\\n  <p class=\\\"footer-text\\\">\\r\\n    {{'app.discharge-disclaimer'|translate}}\\r\\n    <br> {{'app.game-copyright'|translate}}\\r\\n    <br> {{'app.assets-copyright'|translate}}\\r\\n  </p>\\r\\n</div>\"","module.exports = \".footer-container {\\n  position: relative;\\n  height: 100px; }\\n  .footer-container .footer-text {\\n    position: absolute;\\n    z-index: 11;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    text-align: center;\\n    font-size: 0.8em;\\n    font-style: italic;\\n    opacity: 0.6;\\n    color: #000;\\n    text-shadow: white 0px 0px 10px;\\n    margin-bottom: 0;\\n    margin-top: 1rem; }\\n  .footer-container .footer-bg {\\n    background-color: rgba(245, 245, 245, 0.5);\\n    -webkit-filter: blur(5px);\\n            filter: blur(5px);\\n    position: absolute;\\n    z-index: 10;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { cloneDeep, merge } from 'lodash';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { DriverCharaId, ElementId, RoleId } from './model';\r\nimport { FindValueSubscriber } from 'rxjs/internal/operators/find';\r\n\r\n/**\r\n * A registered, bound blade.\r\n *\r\n * @interface ObtainedBlade\r\n */\r\ninterface ObtainedBlade {\r\n  /**\r\n   * The Blade character identifier\r\n   *\r\n   * @type {string}\r\n   * @memberof ObtainedBlade\r\n   */\r\n  b: string;\r\n\r\n  /**\r\n   * The bound Driver identifier\r\n   *\r\n   * @type {DriverCharaId}\r\n   * @memberof ObtainedBlade\r\n   */\r\n  d: DriverCharaId;\r\n\r\n  /**\r\n   * An element override, if applicable.\r\n   * Used for Poppi form configuration.\r\n   *\r\n   * @type {ElementId}\r\n   * @memberof ObtainedBlade\r\n   */\r\n  e?: ElementId;\r\n\r\n  /**\r\n   * A Role override, if applicable.\r\n   * Used for Poppi form configuration.\r\n   *\r\n   * @type {RoleId}\r\n   * @memberof ObtainedBlade\r\n   */\r\n  r?: RoleId;\r\n}\r\n\r\nconst defaultGameSettings: GameSettings = {\r\n  c: 1,\r\n  b: [],\r\n  e: false,\r\n};\r\n\r\nconst defaultSiteSettings: SiteSettings = {\r\n  lang: 'en',\r\n  disclaimerClosed: false,\r\n  bgChapter: 1,\r\n};\r\n\r\n/**\r\n * Game settings storage!\r\n * Sorry for the crazy short variable names.\r\n * Saves space when importing/exporting data.\r\n *\r\n * @export\r\n * @interface GameSettings\r\n */\r\nexport interface GameSettings {\r\n  /**\r\n   * The current chapter of the game. Defines which blades can be displayed.\r\n   * 1 to 10,\r\n   * 11 is Cleared,\r\n   * 12 is NG+.\r\n   *\r\n   * @type {number}\r\n   * @memberof GameSettings\r\n   */\r\n  c: number; // 1 to 10 - 11 is Cleared - 12 is NG+\r\n\r\n  /**\r\n   * All obtained blades registered.\r\n   * Story blades don't need to be added here,\r\n   * except for Poppi's custom configuration.\r\n   *\r\n   * @type {ObtainedBlade[]}\r\n   * @memberof GameSettings\r\n   */\r\n  b: ObtainedBlade[];\r\n\r\n  /**\r\n   * True if the expansion pass blades should be shown.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof GameSettings\r\n   */\r\n  e: boolean;\r\n}\r\n\r\nexport interface SiteSettings {\r\n  /**\r\n   * Current language.\r\n   *\r\n   * @type {string}\r\n   * @memberof SiteSettings\r\n   */\r\n  lang: string;\r\n\r\n  /**\r\n   * True if the spoiler warning was shown - and closed.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof SiteSettings\r\n   */\r\n  disclaimerClosed: boolean;\r\n\r\n  /**\r\n   * Defines which picture to show as site background.\r\n   * 1 to 10,\r\n   * 11 is Cleared,\r\n   * 12 is NG+.\r\n   *\r\n   * @type {number}\r\n   * @memberof SiteSettings\r\n   */\r\n  bgChapter: number;\r\n}\r\n\r\nconst XC2_GAME_SETTINGS_KEY = 'xc2_game_settings';\r\nconst XC2_SITE_SETTINGS_KEY = 'xc2_site_settings';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameSettingsService {\r\n  private _gameSettings$: BehaviorSubject<GameSettings> = new BehaviorSubject(defaultGameSettings);\r\n  private _siteSettings$: BehaviorSubject<SiteSettings> = new BehaviorSubject(defaultSiteSettings);\r\n\r\n  public gameSettings$: Observable<GameSettings> = this._gameSettings$.asObservable();\r\n  public siteSettings$: Observable<SiteSettings> = this._siteSettings$.asObservable();\r\n\r\n  constructor() {\r\n    this.loadGameSettings();\r\n    this.loadSiteSettings();\r\n  }\r\n\r\n  private saveGameSettings(newSettings: GameSettings): void {\r\n    this._gameSettings$.next(newSettings);\r\n    window.localStorage.setItem(XC2_GAME_SETTINGS_KEY, JSON.stringify(newSettings));\r\n  }\r\n\r\n  private saveSiteSettings(newSettings: SiteSettings): void {\r\n    this._siteSettings$.next(newSettings);\r\n    window.localStorage.setItem(XC2_SITE_SETTINGS_KEY, JSON.stringify(newSettings));\r\n  }\r\n\r\n  private loadGameSettings(): void {\r\n    const settingsStr: string = window.localStorage.getItem(XC2_GAME_SETTINGS_KEY);\r\n    if (settingsStr) {\r\n      const settingsObj: any = JSON.parse(settingsStr);\r\n      if (settingsObj) {\r\n        this._gameSettings$.next(settingsObj);\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadSiteSettings(): void {\r\n    const settingsStr: string = window.localStorage.getItem(XC2_SITE_SETTINGS_KEY);\r\n    if (settingsStr) {\r\n      const settingsObj: any = JSON.parse(settingsStr);\r\n      if (settingsObj) {\r\n        this._siteSettings$.next(settingsObj);\r\n      }\r\n    }\r\n  }\r\n\r\n  public clearGameSettings(): void {\r\n    window.localStorage.removeItem(XC2_GAME_SETTINGS_KEY);\r\n    this._gameSettings$.next(cloneDeep(defaultGameSettings));\r\n  }\r\n\r\n  public clearSiteSettings(): void {\r\n    window.localStorage.removeItem(XC2_SITE_SETTINGS_KEY);\r\n    this._siteSettings$.next(cloneDeep(defaultSiteSettings));\r\n  }\r\n\r\n  private changeGameSettings(action: (s: GameSettings) => void) {\r\n    const settings = cloneDeep(this._gameSettings$.value);\r\n    action(settings);\r\n    this.saveGameSettings(settings);\r\n  }\r\n\r\n  private changeSiteSettings(action: (s: SiteSettings) => void) {\r\n    const settings = cloneDeep(this._siteSettings$.value);\r\n    action(settings);\r\n    this.saveSiteSettings(settings);\r\n  }\r\n\r\n  public setGameChapter(newChapter: number): void {\r\n    this.changeGameSettings(s => {\r\n      s.c = newChapter;\r\n    });\r\n  }\r\n\r\n  public setSiteChapter(newChapter: number): void {\r\n    this.changeSiteSettings(s => {\r\n      s.bgChapter = newChapter;\r\n    });\r\n  }\r\n\r\n  public addBlade(bladeId: string, driverId: DriverCharaId, overrideElement?: ElementId, overrideRole?: RoleId): void {\r\n    this.changeGameSettings(s => {\r\n      let blade = s.b.find(x => x.b === bladeId);\r\n      if (!blade) {\r\n        blade = {\r\n          b: bladeId,\r\n          d: driverId\r\n        };\r\n        s.b.push(blade);\r\n      }\r\n      blade.d = driverId;\r\n      blade.e = overrideElement;\r\n      blade.r = overrideRole;\r\n    });\r\n  }\r\n\r\n  public removeBlade(bladeId: string) {\r\n    this.changeGameSettings(s => {\r\n      const idx = s.b.findIndex(x => x.b === bladeId);\r\n      if (idx >= 0) {\r\n        s.b.splice(idx, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setExpansionPass(hasExpansionPass: boolean) {\r\n    this.changeGameSettings(s => {\r\n      s.e = hasExpansionPass;\r\n    });\r\n  }\r\n\r\n  public setLang(newLang: string) {\r\n    this.changeSiteSettings(s => {\r\n      if (s.lang !== newLang) {\r\n        const codeA = s.lang.substr(0, 2);\r\n        const codeB = s.lang.substr(0, 2);\r\n        if (codeA !== codeB) {\r\n          // Reset spoiler warning.\r\n          // This will trigger the warning to be displayed again.\r\n          s.disclaimerClosed = false;\r\n        }\r\n      }\r\n      s.lang = newLang;\r\n    });\r\n  }\r\n\r\n  public setSpoiler(spoilerWarningShown: boolean) {\r\n    this.changeSiteSettings(s => {\r\n      s.disclaimerClosed = spoilerWarningShown;\r\n    });\r\n  }\r\n\r\n  public exportJson(): string {\r\n    return JSON.stringify(this._gameSettings$.value);\r\n  }\r\n\r\n  public importJson(json: string): void {\r\n    try {\r\n      const d = JSON.parse(json);\r\n      const s = cloneDeep(defaultGameSettings);\r\n      merge(s, d);\r\n      this.saveGameSettings(s);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  public resetSettings(): void {\r\n    this.clearGameSettings();\r\n  }\r\n}\r\n","// Courtesy of https://gist.github.com/axelpale/3118596 .\r\n// MIT license. Adapted for TypeScript.\r\nexport function computeKCombinations<T>(set: T[], k: number): T[][] {\r\n    if (k > set.length || k <= 0) {\r\n        return [];\r\n    }\r\n    if (k === set.length) {\r\n        return [set];\r\n    }\r\n    const combs: T[][] = [];\r\n    if (k === 1) {\r\n        for (let i = 0; i < set.length; i++) {\r\n            combs.push([set[i]]);\r\n        }\r\n        return combs;\r\n    }\r\n    for (let i = 0; i < set.length - k + 1; i++) {\r\n        const head = set.slice(i, i + 1);\r\n        const tailcombs = computeKCombinations(set.slice(i + 1), k - 1);\r\n        for (let j = 0; j < tailcombs.length; j++) {\r\n            combs.push(head.concat(tailcombs[j]));\r\n        }\r\n    }\r\n    return combs;\r\n}\r\n\r\n// Courtesy of https://gist.github.com/axelpale/3118596 .\r\n// MIT license. Adapted for TypeScript.\r\nexport function computeCombinations<T>(set: T[]): T[][] {\r\n    const combs: T[][] = [];\r\n    for (let k = 1; k <= set.length; k++) {\r\n        const k_combs = computeKCombinations(set, k);\r\n        for (let i = 0; i < k_combs.length; i++) {\r\n            combs.push(k_combs[i]);\r\n        }\r\n    }\r\n    return combs;\r\n}\r\n\r\nexport function reorderAndDistinct<T>(sets: T[][]): T[][] {\r\n    const newSets: T[][] = [];\r\n    sets.forEach(s => {\r\n        s = s.sort();\r\n\r\n        if (!newSets.some(ns => {\r\n            return ns.length === s.length\r\n                && ns.every((v, i) => s[i] === v);\r\n        })) {\r\n            newSets.push(s);\r\n        }\r\n    });\r\n    return newSets;\r\n}\r\n","export type RoleId = 'ATK' | 'TNK' | 'HLR' | 'HANA';\r\nexport type BladeTypeId = 'SEIHAI' | 'CHARA' | 'GACHA' | 'STORY' | 'QUEST';\r\nexport type ElementId = 'LIGHT' | 'DARK' | 'WATER' | 'FIRE' | 'ELECTRIC' | 'EARTH' | 'ICE' | 'WIND' | 'HANA';\r\nexport type DriverComboId = 'UNKNOWN' | 'N/A' | 'BREAK' | 'TOPPLE' | 'LAUNCH' | 'SMASH';\r\nexport type DriverCharaId = 'REX' | 'NIA' | 'TORA' | 'MELEPH' | 'ZEKE';\r\nexport type BladeGenderId = 'M' | 'F' | 'N/A';\r\nexport type StatModifierId = 'MAXHP' | 'DEXTERITY' | 'AGILITY' | 'ETHER' | 'STRENGTH' | 'LUCK';\r\n\r\nexport type DriverComboMap = {\r\n    [driver in DriverCharaId]: DriverComboId[];\r\n};\r\n\r\n// 'HANA' is just a temporary role for Poppi\r\n// while game settings are not applied, so it's not here.\r\nexport const roles: RoleId[] = [\r\n    'ATK', 'HLR', 'TNK'\r\n];\r\n\r\n// Uses the order from the game's Blade Manager.\r\n// 'HANA' is just a temporary element for Poppi\r\n// while game settings are not applied, so it's not here.\r\nexport const elements: ElementId[] = [\r\n    'FIRE',\r\n    'WATER',\r\n    'WIND',\r\n    'EARTH',\r\n    'ELECTRIC',\r\n    'ICE',\r\n    'LIGHT',\r\n    'DARK',\r\n];\r\n\r\n// Uses the order from the game's Blade Manager.\r\nexport const genders: BladeGenderId[] = [\r\n    'M',\r\n    'F',\r\n    'N/A',\r\n];\r\n\r\nexport const bladeTypes: BladeTypeId[] = [\r\n    'SEIHAI',\r\n    'CHARA',\r\n    'GACHA',\r\n    'STORY',\r\n    'QUEST',\r\n];\r\n\r\nexport const driverCombos: DriverComboId[] = [\r\n    'BREAK',\r\n    'TOPPLE',\r\n    'LAUNCH',\r\n    'SMASH',\r\n];\r\n\r\n/**\r\n * Concatenated database store,\r\n * with all goodies in one package.\r\n *\r\n * @export\r\n * @interface DbStore\r\n */\r\nexport interface DbStore {\r\n    /**\r\n     * ALl weapon classes contained in the database.\r\n     *\r\n     * @type {DbWeaponClass[]}\r\n     * @memberof DbStore\r\n     */\r\n    weapons: DbWeaponClass[];\r\n\r\n    /**\r\n     * All Blade characters contained in the database.\r\n     *\r\n     * @type {DbBlade[]}\r\n     * @memberof DbStore\r\n     */\r\n    blades: DbBlade[];\r\n\r\n    /**\r\n     * All Driver characters contained in the database.\r\n     *\r\n     * @type {DbDriverChara[]}\r\n     * @memberof DbStore\r\n     */\r\n    drivers: DbDriverChara[];\r\n}\r\n\r\n/**\r\n * Static Blade Weapon Class, as contained in the database.\r\n *\r\n * @export\r\n * @interface DbWeaponClass\r\n */\r\nexport interface DbWeaponClass {\r\n    /**\r\n     * The Weapon Class ID.\r\n     *\r\n     * @type {string}\r\n     * @memberof DbWeaponClass\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * The Role attributed to this Weapon Class (ATK, HLR or TNK).\r\n     *\r\n     * @type {RoleId}\r\n     * @memberof DbWeaponClass\r\n     */\r\n    role: RoleId;\r\n\r\n    /**\r\n     * An object mapping all Driver characters to the Driver Combos\r\n     * they can peform with this Weapon Class;\r\n     *\r\n     * @type {DriverComboMap}\r\n     * @memberof DbWeaponClass\r\n     */\r\n    driverCombos: DriverComboMap;\r\n\r\n    /**\r\n     * The sort index, using the sorting of the game's Blade Manager.\r\n     *\r\n     * @type {number}\r\n     * @memberof DbWeaponClass\r\n     */\r\n    sortIdx: number;\r\n}\r\n\r\n/**\r\n * Stat modifier attributed to Blade.\r\n *\r\n * @export\r\n * @interface DbStatModifier\r\n */\r\nexport interface DbStatModifier {\r\n    /**\r\n     * The identifier of the stat modifier (the stat to change).\r\n     *\r\n     * @type {StatModifierId}\r\n     * @memberof DbStatModifier\r\n     */\r\n    id: StatModifierId;\r\n\r\n    /**\r\n     * The added percentage of the stat modifier.\r\n     *\r\n     * @example For +10%, the value is 10.\r\n     */\r\n    value: number;\r\n}\r\n\r\n/**\r\n * A static Blade, as contained in the database.\r\n *\r\n * @export\r\n * @interface DbBlade\r\n */\r\nexport interface DbBlade {\r\n    /**\r\n     * The in-game album number from the game's Blade Manager\r\n     * (5*(row number-1)+column number)\r\n     *\r\n     * @type {number}\r\n     * @memberof DbBlade\r\n     */\r\n    albumNumber: number;\r\n\r\n    /**\r\n     * The blade identifier.\r\n     * Romanization of the Japanese name, simple uppercase ASCII letters and underscores only,\r\n     * no accents.\r\n     * Homura and Hikari have a SEIHAI_ prefix, because they're the goddamn Aegis.\r\n     *\r\n     * @type {string}\r\n     * @memberof DbBlade\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * The Weapon Class identifier of the weapon this Blade wields.\r\n     * Rare blades use standard weapons (W_) prefix.\r\n     * Most but not all legendary blades use exclusive weapons,\r\n     * which are formatted (WB_<Blade ID>) instead.\r\n     *\r\n     * @type {string}\r\n     * @memberof DbBlade\r\n     */\r\n    weapon: string;\r\n\r\n    /**\r\n     * The Element identifier of this blade.\r\n     * If HANA, then it will be overridden by whatever elemental core Poppi has.\r\n     *\r\n     * @type {ElementId}\r\n     * @memberof DbBlade\r\n     */\r\n    element: ElementId;\r\n\r\n    /**\r\n     * The exclusive Driver character identifier of this blade.\r\n     * If present, then this blade cannot be reallocated using Override Protocols\r\n     * or otherwise.\r\n     *\r\n     * @type {string}\r\n     * @memberof DbBlade\r\n     */\r\n    exclusiveDriver?: string;\r\n\r\n    /**\r\n     * The Type of this blade.\r\n     * If not present, assumed to be GACHA.\r\n     *\r\n     * @example\r\n     * SEIHAI: Aegis! (Pyra, Mythra)\r\n     * CHARA: Character blade! (Dromarch, Poppi alpha/QT, Brighid, Pandoria)\r\n     * GACHA: Lottery blade! Did you get KOS-MOS yet?\r\n     * STORY: Mandatory or mostly-mandatory Blade! (Roc, Nia, Aegaeon)\r\n     * QUEST: Blade from a Core obtained by non-mandatory means! (Includes Poppi QT Pi)\r\n     *\r\n     * @type {BladeTypeId}\r\n     * @memberof DbBlade\r\n     */\r\n    type?: BladeTypeId;\r\n\r\n    /**\r\n     * The chapter at which this blade becomes available.\r\n     * If not present, assumed to be 2, like all other Gacha blades.\r\n     *\r\n     * @type {number}\r\n     * @memberof DbBlade\r\n     */\r\n    chapter?: number;\r\n\r\n    /**\r\n     * If true, indicates no picture is available for this blade. :(\r\n     *\r\n     * @type {boolean}\r\n     * @memberof DbBlade\r\n     */\r\n    missingImg?: boolean;\r\n\r\n    /**\r\n     * Aliases, for search/filtering or spoiler URL purposes. Optional.\r\n     *\r\n     * @type {string[]}\r\n     * @memberof DbBlade\r\n     */\r\n    aliases?: string[];\r\n\r\n    /**\r\n     * If true, this blade will be hidden until you shell out enough money\r\n     * to buy the Xenoblade 2 Expansion pass.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof DbBlade\r\n     */\r\n    requiresExpansionPass?: boolean;\r\n\r\n    /**\r\n     * Blade gender, as registered in the game's Blade Manager.\r\n     * Wait. Did you just assume Floren's gender?\r\n     *\r\n     * @type {BladeGenderId}\r\n     * @memberof DbBlade\r\n     */\r\n    gender: BladeGenderId;\r\n\r\n    /**\r\n     * If true, indicates this blade's bound driver can change\r\n     * all the time without an Overdrive protocol, and without\r\n     * releasing it (eg. Mikhail).\r\n     * Note that these blades can still not be equipped by Tora.\r\n     *\r\n     * Used notably for expansion blades like Poppibuster, Shulk and Fiora.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof DbBlade\r\n     */\r\n    unbound?: boolean;\r\n\r\n    /**\r\n     * The stat modifier of this Blade applied to the engaged Driver.\r\n     *\r\n     * @type {DbStatModifier}\r\n     * @memberof DbBlade\r\n     */\r\n    modifier?: DbStatModifier;\r\n}\r\n\r\n/**\r\n * Static Driver character, as stored in whetever database.\r\n *\r\n * @export\r\n * @interface DbDriverChara\r\n */\r\nexport interface DbDriverChara {\r\n    /**\r\n     * Driver ID\r\n     *\r\n     * @type {DriverCharaId}\r\n     * @memberof DbDriverChara\r\n     */\r\n    id: DriverCharaId;\r\n\r\n\r\n    /**\r\n     * Chapter number in which this Driver character\r\n     * becomes available.\r\n     *\r\n     * @type {number}\r\n     * @memberof DbDriverChara\r\n     */\r\n    chapter: number;\r\n\r\n    /**\r\n     * The sort index, using the sorting of the game's Blade Manager.\r\n     *\r\n     * @type {number}\r\n     * @memberof DbDriverChara\r\n     */\r\n    sortIdx: number;\r\n}\r\n\r\n// Playable drivers are probably not going to change any time soon. They're hardcoded here.\r\nexport const driverCharacters: DbDriverChara[] = [\r\n    {\r\n        id: 'REX',\r\n        chapter: 1,\r\n        sortIdx: 0,\r\n    },\r\n    {\r\n        id: 'NIA', // <- This is best girl, by the way.\r\n        chapter: 2,\r\n        sortIdx: 1,\r\n    },\r\n    {\r\n        id: 'TORA',\r\n        chapter: 2,\r\n        sortIdx: 2,\r\n    },\r\n    {\r\n        id: 'MELEPH',\r\n        chapter: 5,\r\n        sortIdx: 3,\r\n    },\r\n    {\r\n        id: 'ZEKE',\r\n        chapter: 6,\r\n        sortIdx: 4,\r\n    },\r\n];\r\n\r\nexport interface DriverComboSet {\r\n    driverId: DriverCharaId;\r\n    combos: DriverComboId[];\r\n}\r\n\r\n/**\r\n * Processed Blade, with regards to what blades have been found,\r\n * who they belong to, and whether they can be shown considering\r\n * stored game/chapter settings.\r\n *\r\n * @export\r\n * @interface Blade\r\n */\r\nexport interface Blade {\r\n\r\n    /**\r\n     * The blade identifier from {@link DbBlade#id}.\r\n     *\r\n     * @see {DbBlade#id}\r\n     * @type {string}\r\n     * @memberof Blade\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * The static {@link DbBlade} object relevant to this Blade.\r\n     *\r\n     * @type {DbBlade}\r\n     * @memberof Blade\r\n     */\r\n    db: DbBlade;\r\n\r\n    /**\r\n     * The role identifier of this Blade, with regards to game settings\r\n     * in the case of Poppi.\r\n     *\r\n     * @type {RoleId}\r\n     * @memberof Blade\r\n     */\r\n    role: RoleId;\r\n\r\n    /**\r\n     * The element identifier of this Blade, with regards to game settings\r\n     * in the case of Poppi.\r\n     *\r\n     * @type {ElementId}\r\n     * @memberof Blade\r\n     */\r\n    element: ElementId;\r\n\r\n    /**\r\n     * The type of this Blade from {@link DbBlade#type}.\r\n     *\r\n     * @type {BladeTypeId}\r\n     * @memberof Blade\r\n     */\r\n    bladeType: BladeTypeId;\r\n\r\n\r\n    /**\r\n     * The chapter at which this blade becomes available, from {@link DbBlade#chapter}.\r\n     *\r\n     * @type {number}\r\n     * @memberof Blade\r\n     */\r\n    minChapter: number;\r\n\r\n    /**\r\n     * The exclusive Driver character of this Blade, from {@link DbBlade#exclusiveDriver}.\r\n     *\r\n     * @type {DriverCharaId}\r\n     * @memberof Blade\r\n     */\r\n    exclusiveDriver?: DriverCharaId;\r\n\r\n    /**\r\n     * The Weapon Class object linked to this blade.\r\n     *\r\n     * @type {DbWeaponClass}\r\n     * @memberof Blade\r\n     */\r\n    weaponClass: DbWeaponClass;\r\n\r\n    driverCombos: DriverComboSet[];\r\n\r\n    /**\r\n     * The diamond portrait thumbnail URL to display with the Blade.\r\n     *\r\n     * @type {string}\r\n     * @memberof Blade\r\n     */\r\n    thumbUrl: string;\r\n\r\n    /**\r\n     * True if using this Blade requires the Xenoblade 2 Expansion Pass.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof Blade\r\n     */\r\n    requiresExpansionPass: boolean;\r\n\r\n    /**\r\n     * True if this Blade's bound Driver can be changed with an Override Protocol.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof Blade\r\n     */\r\n    canChangeBoundDriver: boolean;\r\n\r\n    /**\r\n     * True if this Blade is hidden from lists due to chapter or Expansion Pass\r\n     * constraints.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof Blade\r\n     */\r\n    isHidden: boolean;\r\n\r\n    /**\r\n     * True if this Blade was found, bound to a Driver, and can be Engaged.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof Blade\r\n     */\r\n    isFound: boolean;\r\n\r\n    /**\r\n     * Blade name aliases, from {@link DbBlade#aliases}\r\n     *\r\n     * @type {string[]}\r\n     * @memberof Blade\r\n     */\r\n    aliases: string[];\r\n\r\n    /**\r\n     * The identifier of the bound Driver character.\r\n     * Undefined if not found.\r\n     * In case of a story or character blade, it's the exclusiveDriver property.\r\n     *\r\n     * @type {DriverCharaId}\r\n     * @memberof Blade\r\n     */\r\n    boundDriver?: Driver;\r\n}\r\n\r\n/**\r\n * Processed Driver, with regards to what Blades they're bound to, what Blades they can engage,\r\n * and whether they can be shown considering chapter settings.\r\n *\r\n * @export\r\n * @interface Driver\r\n */\r\nexport interface Driver {\r\n    /**\r\n     * The Driver character identifier.\r\n     *\r\n     * @type {DriverCharaId}\r\n     * @memberof Driver\r\n     */\r\n    id: DriverCharaId;\r\n\r\n    /**\r\n     * The static {@link DbDriverChara} object relevant to this Driver.\r\n     *\r\n     * @type {DbDriverChara}\r\n     * @memberof Driver\r\n     */\r\n    db: DbDriverChara;\r\n\r\n    /**\r\n     * True if this Driver is hidden from lists due to chapter constraints.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof Driver\r\n     */\r\n    isHidden: boolean;\r\n\r\n    /**\r\n     * The Blades directly bound to this Driver.\r\n     */\r\n    boundBlades: Blade[];\r\n}\r\n","module.exports = \"<div class=\\\"my-game-page container page-container\\\">\\r\\n  <div class=\\\"chapter-selection\\\">\\r\\n    <h3>{{'my-game.story-chapter'|translate}}</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        {{'my-game.story-chapter-desc'|translate}}\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <div class=\\\"btn-toolbar\\\" role=\\\"group\\\" aria-label=\\\"Chapter selection\\\" btnRadioGroup [ngModel]=\\\"currentChapter\\\">\\r\\n          <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\">\\r\\n            <button type=\\\"button\\\" role=\\\"button\\\" class=\\\"btn btn-warning\\\" [attr.title]=\\\"('chapters.desc'|translate:{c:chapter}) + ('chapters.'+chapter|translate)\\\"\\r\\n              *ngFor=\\\"let chapter of earlyChapters\\\" [btnRadio]=\\\"chapter\\\" (click)=\\\"selectChapter($event, chapter)\\\">{{chapter}}</button>\\r\\n          </div>\\r\\n          <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\">\\r\\n            <button type=\\\"button\\\" role=\\\"button\\\" class=\\\"btn btn-info\\\" [attr.title]=\\\"('chapters.desc'|translate:{c:chapter}) + ('chapters.'+chapter|translate)\\\"\\r\\n              *ngFor=\\\"let chapter of lateChapters\\\" [btnRadio]=\\\"chapter\\\" (click)=\\\"selectChapter($event, chapter)\\\">{{chapter}}</button>\\r\\n          </div>\\r\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button type=\\\"button\\\" role=\\\"button\\\" class=\\\"btn btn-success\\\" [attr.title]=\\\"'chapters.11'|translate\\\" [btnRadio]=\\\"11\\\" (click)=\\\"selectChapter($event, 11)\\\">{{'my-game.game-cleared-item'|translate}}</button>\\r\\n            <button type=\\\"button\\\" role=\\\"button\\\" class=\\\"btn btn-success\\\" [attr.title]=\\\"'chapters.12'|translate\\\" [btnRadio]=\\\"12\\\" (click)=\\\"selectChapter($event, 12)\\\">{{'my-game.new-game-plus-item'|translate}}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        {{'my-game.expansion-pass-desc'|translate}}\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn\\\" [ngModel]=\\\"expansionPass\\\" btnCheckbox [ngClass]=\\\"{'btn-default': !expansionPass, 'btn-success': expansionPass}\\\"\\r\\n          (click)=\\\"toggleExpansionPass()\\\" [btnCheckboxTrue]=\\\"true\\\" [btnCheckboxFalse]=\\\"false\\\">\\r\\n          <span [hidden]=\\\"!expansionPass\\\" class=\\\"fa fas fa-check\\\"></span>\\r\\n          {{'my-game.enable-expansion-pass'|translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"blade-driver-selection\\\">\\r\\n    <h3>{{'my-game.bonded-blades'|translate}}</h3>\\r\\n    <p>{{'my-game.bonded-blades-desc'|translate}}</p>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"input-group mb-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"searchFilterControl\\\" [attr.placeholder]=\\\"'app.filter-placeholder'|translate\\\"\\r\\n            [attr.aria-label]=\\\"'app.filter-placeholder'|translate\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"filter-toolbar\\\">\\r\\n          {{'app.grouping.label'|translate}}\\r\\n          <span *ngFor=\\\"let g of bladeGroupingTypes; let l=last\\\">\\r\\n            <span class=\\\"filter-link\\\" (click)=\\\"groupBy(g)\\\" [ngClass]=\\\"{active:g===currentGrouping}\\\">{{'app.grouping.'+g|translate}}</span>\\r\\n            <span *ngIf=\\\"!l\\\">/</span>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"filter-toolbar\\\">\\r\\n          {{'app.ordering.label'|translate}}\\r\\n          <span *ngFor=\\\"let o of bladeOrderingTypes; let l=last\\\">\\r\\n            <span class=\\\"filter-link\\\" (click)=\\\"orderBy(o)\\\" [ngClass]=\\\"{active:o===currentOrder}\\\">{{'app.ordering.'+o|translate}}</span>\\r\\n            <span *ngIf=\\\"!l\\\">/</span>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngFor=\\\"let bg of bladeGroups; index as idx\\\">\\r\\n      <h4 class=\\\"collapse-title\\\" (click)=\\\"collapsedGroups[idx] = !collapsedGroups[idx]\\\" [hidden]=\\\"bg.blades.length < 1\\\">\\r\\n        <span class=\\\"fas\\\" [ngClass]=\\\"{'fa-caret-right': collapsedGroups[idx],'fa-caret-down': !collapsedGroups[idx]}\\\"></span>\\r\\n        {{bg.labelKey|translate}} ({{bg.blades.length}})\\r\\n      </h4>\\r\\n      <div class=\\\"blade-driver-selection-rows\\\" [collapse]=\\\"collapsedGroups[idx]\\\" [hidden]=\\\"bg.blades.length < 1\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-4 col-md-4 col-sm-6 offset-lg-8 offset-md-8 offset-sm-6\\\">\\r\\n            <strong>{{'my-game.select-blade-driver'|translate}}</strong>\\r\\n          </div>\\r\\n        </div>\\r\\n        <app-blade-driver-selection-row *ngFor=\\\"let b of bg.blades; let idx=index\\\" [blade]=\\\"b\\\" [ngClass]=\\\"{even: (idx % 2) == 0}\\\"></app-blade-driver-selection-row>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <h3>{{'my-game.import-export'|translate}}</h3>\\r\\n  <p>\\r\\n    <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"importData()\\\">{{'my-game.import-data'|translate}}</button>\\r\\n    <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"exportData()\\\">{{'my-game.export-data'|translate}}</button>\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"resetData()\\\">{{'my-game.reset-data'|translate}}</button>\\r\\n  </p>\\r\\n</div>\\r\\n\"","module.exports = \".collapse-title {\\n  cursor: pointer; }\\n\\n.filter-toolbar .filter-link {\\n  cursor: pointer; }\\n\\n.filter-toolbar .filter-link:hover, .filter-toolbar .filter-link.active {\\n    font-weight: bold; }\\n\\n.blade-driver-selection-rows .even ::ng-deep > .row {\\n  background-color: rgba(255, 255, 255, 0.5); }\\n\"","import { Component, OnDestroy, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { combineLatest, concat, Subject, BehaviorSubject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, startWith, takeUntil } from 'rxjs/operators';\r\nimport {\r\n  BladeManagerService, BladeGroup, BladeGroupingType,\r\n  BladeOrderingType, bladeGroupingTypes, bladeOrderingTypes\r\n} from '../blade-manager.service';\r\nimport { GameSettingsService } from '../game-settings.service';\r\nimport { Blade } from '../model';\r\n@Component({\r\n  selector: 'app-my-game-page',\r\n  templateUrl: './my-game-page.component.html',\r\n  styleUrls: ['./my-game-page.component.scss']\r\n})\r\nexport class MyGamePageComponent implements OnInit, OnDestroy {\r\n\r\n  private unsubscribe = new Subject<void>();\r\n\r\n  public earlyChapters: number[] = Array(7).fill(0).map((x, i) => i + 1);\r\n  public lateChapters: number[] = Array(3).fill(0).map((x, i) => i + 8);\r\n\r\n  public currentChapter = 1;\r\n  public expansionPass = false;\r\n  public collapsedGroups: boolean[] = [];\r\n  public bladeGroups: BladeGroup[] = [];\r\n  public searchFilterControl = new FormControl();\r\n\r\n  public currentGrouping: BladeGroupingType = 'NONE';\r\n  public currentOrder: BladeOrderingType = 'ALBUM';\r\n\r\n  public bladeGroupingTypes = bladeGroupingTypes;\r\n  public bladeOrderingTypes = bladeOrderingTypes;\r\n\r\n  constructor(\r\n    private gameSettingsService: GameSettingsService,\r\n    private bladeManagerService: BladeManagerService,\r\n    private tlService: TranslateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.searchFilterControl.valueChanges.pipe(\r\n      takeUntil(this.unsubscribe),\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n    ).subscribe((f) => {\r\n      this.bladeManagerService.setSearchFilter(f);\r\n    });\r\n\r\n    this.bladeManagerService.searchFilter$.pipe(\r\n      takeUntil(this.unsubscribe),\r\n    ).subscribe((f) => {\r\n      this.searchFilterControl.setValue(f);\r\n    });\r\n\r\n    this.bladeManagerService.grouping$.pipe(\r\n      takeUntil(this.unsubscribe),\r\n    ).subscribe((g) => {\r\n      this.currentGrouping = g;\r\n    });\r\n\r\n    this.bladeManagerService.sortOrder$.pipe(\r\n      takeUntil(this.unsubscribe),\r\n    ).subscribe((o) => {\r\n      this.currentOrder = o;\r\n    });\r\n\r\n    this.gameSettingsService.gameSettings$.pipe(\r\n      takeUntil(this.unsubscribe)\r\n    ).subscribe(s => {\r\n      this.currentChapter = s.c;\r\n      this.expansionPass = s.e;\r\n    });\r\n\r\n    this.bladeManagerService.groupedBlades$.pipe(\r\n      takeUntil(this.unsubscribe),\r\n    ).subscribe((bladeGroups) => {\r\n      this.bladeGroups = bladeGroups;\r\n    });\r\n\r\n    this.bladeManagerService.grouping$.pipe(\r\n      takeUntil(this.unsubscribe),\r\n      distinctUntilChanged(),\r\n    ).subscribe(() => {\r\n      this.collapsedGroups = [];\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  public groupBy(g: BladeGroupingType) {\r\n    this.bladeManagerService.setGrouping(g);\r\n  }\r\n\r\n  public orderBy(o: BladeOrderingType) {\r\n    this.bladeManagerService.setOrdering(o);\r\n  }\r\n\r\n  public selectChapter($event: KeyboardEvent | MouseEvent, newChapter: number) {\r\n    // Always set site chapter\r\n    this.gameSettingsService.setSiteChapter(newChapter);\r\n\r\n    if ($event.ctrlKey) {\r\n      // With Ctrl: Don't change the game chapter, only the background\r\n      // Unfortunately, we need to do a few things to ensure the new chapter is not selected\r\n      // in the html radio input buttons:\r\n\r\n      // Store the currently selected chapter\r\n      const previousChapter = this.currentChapter;\r\n\r\n      // Set the variable and force-refresh Angular before the end of the method,\r\n      // to select the new chapter in the html inputs\r\n      this.currentChapter = newChapter;\r\n      this.changeDetectorRef.detectChanges();\r\n\r\n      // Reset the previous chapter\r\n      this.currentChapter = previousChapter;\r\n      // Angular will be refreshed after this method\r\n      // and re-select the previous chapter in the html inputs\r\n    } else {\r\n      // Without Ctrl: Also change the game chapter.\r\n      // No need to tinker with the inputs here: they change as expected.\r\n      this.gameSettingsService.setGameChapter(newChapter);\r\n    }\r\n  }\r\n\r\n  public toggleExpansionPass() {\r\n    this.gameSettingsService.setExpansionPass(!this.expansionPass);\r\n  }\r\n\r\n  public importData() {\r\n    const msg = this.tlService.instant('my-game.import-data-paste');\r\n    const p = window.prompt(msg);\r\n    if (p) {\r\n      this.gameSettingsService.importJson(p);\r\n    }\r\n  }\r\n\r\n  public exportData() {\r\n    const msg = this.tlService.instant('my-game.export-data-copy');\r\n    const p = window.prompt(msg, this.gameSettingsService.exportJson());\r\n  }\r\n\r\n  public resetData() {\r\n    const msg = this.tlService.instant('my-game.reset-data-confirm');\r\n    if (window.confirm(msg)) {\r\n      this.gameSettingsService.resetSettings();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"my-party-page container-fluid page-container\\\">\\r\\n  <h3>{{'app.my-party'|translate}}</h3>\\r\\n\\r\\n  <div class=\\\"party-selection container-fluid\\\">\\r\\n    <div class=\\\"party-selector row\\\">\\r\\n\\r\\n      <div class=\\\"party-member col-sm\\\" *ngFor=\\\"let partyIdx of partyCnt\\\" [ngClass]=\\\"{'in-battle': isInBattle(partyIdx)}\\\">\\r\\n        <div class=\\\"driver-title\\\" *ngIf=\\\"this.currentParty && this.currentParty.partyMembers[partyIdx] as partyMember\\\" (click)=\\\"onPartyMemberClick(partyMember)\\\">\\r\\n          <div class=\\\"character-img\\\" [attr.title]=\\\"'drivers.'+partyMember.driver.id|translate\\\" [ngStyle]=\\\"getDriverImgStyle(partyMember)\\\"></div>\\r\\n          <div class=\\\"character-name-container\\\">\\r\\n            <h3 class=\\\"character-name\\\">{{'drivers.'+partyMember.driver.id|translate}}</h3>\\r\\n            <p class=\\\"character-class\\\">\\r\\n              {{'classes.'+partyMember.classId|translate}}\\r\\n              <xc2-role-icon *ngFor=\\\"let r of partyMember.roles\\\" [role]=\\\"r\\\"></xc2-role-icon>\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"party-member-blades\\\" *ngIf=\\\"this.currentParty && this.currentParty.partyMembers[partyIdx] as partyMember\\\">\\r\\n          <div class=\\\"blade-diamond\\\">\\r\\n            <div class=\\\"blade-diamond-visible\\\">\\r\\n              <div class=\\\"party-member-blade\\\" *ngFor=\\\"let bladeIdx of bladeCnt\\\">\\r\\n\\r\\n                <div class=\\\"blade active-blade\\\" *ngIf=\\\"partyMember.blades[bladeIdx] as blade\\\" dndDropzone (dndDrop)=\\\"onBladeDropOnCharacterBladeSlot($event, partyMember, blade)\\\"\\r\\n                  (click)=\\\"onCharacterSlotBladeClick($event, partyMember, blade)\\\" [dndDraggable]=\\\"blade.id\\\" (dndStart)=\\\"onBladeDragStart($event, blade.id, partyMember.driver.id)\\\">\\r\\n\\r\\n                  <app-blade-thumbnail [blade]=\\\"blade\\\" [showElement]=\\\"false\\\"></app-blade-thumbnail>\\r\\n\\r\\n                  <div class=\\\"blade-name-container\\\">\\r\\n                    <!-- <img class=\\\"element-img active\\\" [src]=\\\"'assets/xc2/elements/'+blade.element+'.png'\\\" [attr.title]=\\\"'elements.'+blade.element|translate\\\"> -->\\r\\n                    <div class=\\\"blade-name\\\">\\r\\n                      {{'blades.'+blade.id|translate}}</div>\\r\\n                    <xc2-element-icon [element]=\\\"blade.element\\\"></xc2-element-icon>\\r\\n                    <xc2-role-icon [role]=\\\"blade.role\\\"></xc2-role-icon>\\r\\n                    <xc2-driver-combo-icon *ngFor=\\\"let dc of getDriverCombos(blade,partyMember.driver.id)\\\" [driverCombo]=\\\"dc\\\"></xc2-driver-combo-icon>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"blade free-slot\\\" *ngIf=\\\"!partyMember.blades[bladeIdx]\\\" dndDropzone (dndDrop)=\\\"onBladeDropOnCharacterEmptySlot($event, partyMember)\\\">\\r\\n                  <app-blade-thumbnail [blade]=\\\"undefined\\\"></app-blade-thumbnail>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"party-member-blade hidden-slot\\\" *ngIf=\\\"partyMember.hiddenBlade\\\">\\r\\n                <div class=\\\"blade\\\">\\r\\n                  <app-blade-thumbnail [blade]=\\\"partyMember.hiddenBlade\\\"></app-blade-thumbnail>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"stat-modifiers\\\" *ngIf=\\\"this.currentParty && this.currentParty.partyMembers[partyIdx] as partyMember\\\">\\r\\n          <div *ngFor=\\\"let m of partyMember.modifiers\\\">\\r\\n            {{'modifiers.'+m.id|translate}} +{{m.value}}%\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"class-modifiers\\\" *ngIf=\\\"this.currentParty && this.currentParty.partyMembers[partyIdx] as partyMember\\\">\\r\\n          <div *ngFor=\\\"let m of partyMember.classModifiers\\\">\\r\\n            {{'class-attributes.'+m.id|translate}}\\r\\n            <i class=\\\"fas fa-arrow-up\\\" *ngIf=\\\"m.value > 0\\\"></i>\\r\\n            <i class=\\\"fas fa-arrow-up\\\" *ngIf=\\\"m.value > 1\\\"></i>\\r\\n            <i class=\\\"fas fa-arrow-up\\\" *ngIf=\\\"m.value > 2\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"party-stats container\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"this.currentParty && this.currentParty.errors.length\\\">\\r\\n        <div class=\\\"col-md\\\">\\r\\n          <h3>{{'my-party.party-issues'|translate}}</h3>\\r\\n          <ul>\\r\\n            <li *ngFor=\\\"let e of this.currentParty.errors\\\">\\r\\n              {{e.key|translate:translateParams(e.params)}}\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md\\\" *ngIf=\\\"this.currentParty\\\">\\r\\n          <span class=\\\"stat-title\\\">{{'my-party.elements'|translate}} {{this.currentParty.elements.length}} / {{elements.length}}</span>\\r\\n          <img class=\\\"element-img\\\" *ngFor=\\\"let e of elements\\\" [src]=\\\"'assets/xc2/elements/'+e+'.png'\\\" [attr.title]=\\\"'elements.'+e|translate\\\"\\r\\n            [ngClass]=\\\"{'active':this.currentParty.elements.indexOf(e) >= 0}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md\\\" *ngIf=\\\"this.currentParty\\\">\\r\\n          <span class=\\\"stat-title\\\">{{'my-party.driver-combos'|translate}} {{this.currentParty.driverCombos.length}} / {{driverCombos.length}}</span>\\r\\n          <span class=\\\"driver-combo\\\" *ngFor=\\\"let dc of driverCombos\\\" [ngClass]=\\\"{'active':this.currentParty.driverCombos.indexOf(dc) >= 0}\\\">\\r\\n            <xc2-driver-combo-icon [driverCombo]=\\\"dc\\\"></xc2-driver-combo-icon>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"blade-selection container\\\">\\r\\n      <h3>{{'my-party.blades'|translate}}</h3>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"searchFilterControl\\\" [attr.placeholder]=\\\"'app.filter-placeholder'|translate\\\"\\r\\n              [attr.aria-label]=\\\"'app.filter-placeholder'|translate\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"filter-toolbar\\\">\\r\\n            {{'my-party.filter-driver'|translate}}\\r\\n            <span class=\\\"filter-link\\\" (click)=\\\"filterDriver()\\\" [ngClass]=\\\"{active:!driverFilter}\\\">{{'my-party.filter-driver-all'|translate}}</span>\\r\\n            <span *ngFor=\\\"let d of drivers; let l=last\\\">\\r\\n              <span>/</span>\\r\\n              <span class=\\\"filter-link\\\" (click)=\\\"filterDriver(d)\\\" [ngClass]=\\\"{active: driverFilter && driverFilter.id === d.id}\\\">{{'drivers.'+d.id|translate}}</span>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"filter-toolbar\\\">\\r\\n            {{'app.ordering.label'|translate}}\\r\\n            <span *ngFor=\\\"let o of bladeOrderingTypes; let l=last\\\">\\r\\n              <span class=\\\"filter-link\\\" (click)=\\\"orderBy(o)\\\" [ngClass]=\\\"{active:o===currentOrder}\\\">{{'app.ordering.'+o|translate}}</span>\\r\\n              <span *ngIf=\\\"!l\\\">/</span>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-3 blade-item\\\" *ngFor=\\\"let blade of usableBlades\\\" [dndDraggable]=\\\"blade.id\\\" (dndStart)=\\\"onBladeDragStart($event, blade.id)\\\">\\r\\n          <app-blade-thumbnail [blade]=\\\"blade\\\" [showElement]=\\\"true\\\" [showDriver]=\\\"true\\\" [showRole]=\\\"true\\\"></app-blade-thumbnail>\\r\\n          <span class=\\\"blade-name\\\">{{'blades.'+blade.id|translate}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","module.exports = \".my-party-page .container {\\n  background: transparent; }\\n\\n.my-party-page .party-member .character-img,\\n.my-party-page .party-member .character-name,\\n.my-party-page .party-member .blade-diamond {\\n  opacity: 0.5; }\\n\\n.my-party-page .party-member.in-battle .character-img,\\n.my-party-page .party-member.in-battle .character-name,\\n.my-party-page .party-member.in-battle .blade-diamond {\\n  opacity: 1; }\\n\\n.my-party-page .party-member .blade-diamond {\\n  position: relative;\\n  height: 168px; }\\n\\n.my-party-page .party-member .blade-diamond .party-member-blade {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    z-index: 15; }\\n\\n.my-party-page .party-member .blade-diamond .party-member-blade:nth-child(2) {\\n      top: 38px;\\n      left: 38px; }\\n\\n.my-party-page .party-member .blade-diamond .party-member-blade:nth-child(3) {\\n      top: 76px;\\n      left: 0; }\\n\\n.my-party-page .party-member .blade-diamond .party-member-blade.hidden-slot {\\n      /* Hidden slot */\\n      top: 38px;\\n      left: -28px;\\n      opacity: 0.5;\\n      z-index: 14; }\\n\\n.my-party-page .party-member .blade-diamond .blade {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: flex-start;\\n    flex-wrap: nowrap;\\n    align-items: stretch; }\\n\\n.my-party-page .party-member .blade-diamond .blade .blade-name-container {\\n      margin-left: 5px;\\n      display: flex;\\n      flex-direction: row;\\n      justify-content: center;\\n      align-items: center; }\\n\\n.my-party-page .party-member .blade-diamond .blade .blade-name-container .blade-name {\\n        font-weight: bold;\\n        font-style: italic; }\\n\\n.my-party-page .party-member .blade-diamond .blade.free-slot {\\n      opacity: 0.5; }\\n\\n.my-party-page .blade-selection .blade-item {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center; }\\n\\n.my-party-page .blade-selection .blade-item .blade-name {\\n    margin-left: 5px; }\\n\\n.my-party-page .stat-title {\\n  font-weight: bold;\\n  margin-right: 10px; }\\n\\n.my-party-page .element-img {\\n  opacity: 0.2;\\n  height: 32px;\\n  width: 32px; }\\n\\n.my-party-page .element-img.active {\\n    opacity: 1; }\\n\\n.my-party-page .driver-combo {\\n  opacity: 0.2; }\\n\\n.my-party-page .driver-combo.active {\\n    opacity: 1; }\\n\\n.my-party-page .driver-title,\\n.my-party-page .active-blade {\\n  cursor: pointer; }\\n\\n.my-party-page .blade-item {\\n  cursor: -webkit-grab;\\n  cursor: grab; }\\n\\n.my-party-page .driver-title {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: stretch; }\\n\\n.my-party-page .driver-title .character-img {\\n    height: 66px;\\n    width: 66px;\\n    background-size: contain; }\\n\\n.my-party-page .driver-title .character-name-container {\\n    flex-grow: 1;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center; }\\n\\n.my-party-page .driver-title .character-name {\\n    margin: 0 0 0 5px;\\n    font-size: 16pt;\\n    vertical-align: baseline; }\\n\\n.my-party-page .driver-title .character-class {\\n    margin: 0 0 0 5px; }\\n\\n.my-party-page .filter-toolbar .filter-link {\\n  cursor: pointer; }\\n\\n.my-party-page .filter-toolbar .filter-link:hover, .my-party-page .filter-toolbar .filter-link.active {\\n    font-weight: bold; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  PartyManagerService, EffectivePartyMember, EffectiveParty,\r\n  PartyDescription, PartyMemberDescriptor\r\n} from '../party-manager.service';\r\nimport { BladeManagerService, BladeOrderingType, bladeOrderingTypes } from '../blade-manager.service';\r\nimport { Subject, combineLatest, BehaviorSubject } from 'rxjs';\r\nimport { takeUntil, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { Blade, Driver, ElementId, elements, driverCombos, DriverComboId } from '../model';\r\nimport { GameSettingsService } from '../game-settings.service';\r\nimport { DragDropData } from 'ngx-drag-drop/dnd-utils';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nexport function createDescriptionFromEffectiveParty(ep: EffectiveParty): PartyDescription {\r\n  const pd: PartyDescription = {\r\n    gameChapter: ep.gameChapter,\r\n    partyMembers: [],\r\n  };\r\n\r\n  for (const epm of ep.partyMembers) {\r\n    pd.partyMembers.push({\r\n      inBattle: epm.inBattle,\r\n      driverId: epm.driver.id,\r\n      bladeIds: epm.blades.map(m => m.id),\r\n    });\r\n  }\r\n  return pd;\r\n}\r\n\r\nexport function engageBladeOn(pm: PartyMemberDescriptor, bladeIdToSet?: string, bladeIdToReplace?: string) {\r\n  let idxOfBladeToSet = bladeIdToSet ? pm.bladeIds.indexOf(bladeIdToSet) : -1;\r\n  const idxOfBladeToReplace = pm.bladeIds.indexOf(bladeIdToReplace);\r\n\r\n  if (bladeIdToSet === 'SEIHAI_HOMURA' && idxOfBladeToSet < 0) {\r\n    idxOfBladeToSet = pm.bladeIds.indexOf('SEIHAI_HIKARI');\r\n  } else if (bladeIdToSet === 'SEIHAI_HIKARI' && idxOfBladeToSet < 0) {\r\n    idxOfBladeToSet = pm.bladeIds.indexOf('SEIHAI_HOMURA');\r\n  }\r\n\r\n  if (bladeIdToSet && !bladeIdToReplace) {\r\n    if (idxOfBladeToSet < 0) {\r\n      // Add Blade\r\n      pm.bladeIds.push(bladeIdToSet);\r\n    } else {\r\n      // Reset blade at position\r\n      pm.bladeIds[idxOfBladeToSet] = bladeIdToSet;\r\n    }\r\n  } else if (bladeIdToSet && bladeIdToReplace) {\r\n    if (idxOfBladeToSet >= 0 && idxOfBladeToReplace >= 0) {\r\n      if (idxOfBladeToSet === idxOfBladeToReplace) {\r\n        // Reset blade at position\r\n        pm.bladeIds[idxOfBladeToSet] = bladeIdToSet;\r\n      } else {\r\n        // Blade to set already exists, and blade to replace exists\r\n        // Exchange both blades\r\n        const bladeIdReplaced = pm.bladeIds[idxOfBladeToReplace];\r\n        pm.bladeIds[idxOfBladeToSet] = bladeIdReplaced;\r\n        pm.bladeIds[idxOfBladeToReplace] = bladeIdToSet;\r\n      }\r\n    } else if (idxOfBladeToSet < 0 && idxOfBladeToReplace >= 0) {\r\n      // Blade to set doesn't exist, and blade to replace exists\r\n      // Replace blade\r\n      pm.bladeIds[idxOfBladeToReplace] = bladeIdToSet;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function removeBladeFrom(pm: PartyMemberDescriptor, bladeIdToRemove: string) {\r\n  const idxOfBladeToRemove = pm.bladeIds.indexOf(bladeIdToRemove);\r\n  if (idxOfBladeToRemove >= 0) {\r\n    pm.bladeIds.splice(idxOfBladeToRemove, 1);\r\n  }\r\n}\r\n\r\nexport function canEngageBladeOn(b: Blade, d: Driver): boolean {\r\n  const enableMasterDriver = true;\r\n  if (d.id === 'TORA') {\r\n    return b.exclusiveDriver === 'TORA'; // Poppi only!\r\n  } else if (d.id === 'REX' && enableMasterDriver) {\r\n    return b.exclusiveDriver !== 'TORA'; // All Blades except Poppi are fair game on Rex\r\n  } else {\r\n    // Only exclusive Blades, and non-exclusive, bound Blades\r\n    return b.exclusiveDriver === d.id || (b.boundDriver && b.boundDriver.id === d.id);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-my-party-page',\r\n  templateUrl: './my-party-page.component.html',\r\n  styleUrls: ['./my-party-page.component.scss']\r\n})\r\nexport class MyPartyPageComponent implements OnInit, OnDestroy {\r\n\r\n  private unsubscribe = new Subject<void>();\r\n  private defaultPartyDesc: PartyDescription = undefined;\r\n  private defaultParty: EffectiveParty = undefined;\r\n  private blades: Blade[] = [];\r\n\r\n  public searchFilterControl = new FormControl();\r\n  public partyCnt = Array.from({ length: 5 }, (_, i) => i); // [0, 1, 2, 3, 4]\r\n  public bladeCnt = Array.from({ length: 3 }, (_, i) => i); // [0, 1, 2]\r\n\r\n  public currentPartyDesc: PartyDescription = undefined;\r\n  public currentParty: EffectiveParty = undefined;\r\n  public drivers: Driver[] = [];\r\n  public driverFilter$: BehaviorSubject<Driver> = new BehaviorSubject(undefined);\r\n  public driverFilter: Driver = undefined;\r\n\r\n  public usableBlades: Blade[] = [];\r\n  public currentOrder: BladeOrderingType = 'ALBUM';\r\n  public bladeOrderingTypes = bladeOrderingTypes;\r\n\r\n  public elements: ElementId[] = elements;\r\n  public driverCombos: DriverComboId[] = driverCombos;\r\n\r\n  constructor(\r\n    private partyManagerService: PartyManagerService,\r\n    private bladeManagerService: BladeManagerService,\r\n    private gameSettingsService: GameSettingsService,\r\n    private translateService: TranslateService,\r\n  ) { }\r\n\r\n  public ngOnInit() {\r\n    this.searchFilterControl.valueChanges.pipe(\r\n      takeUntil(this.unsubscribe),\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n    ).subscribe((f) => {\r\n      this.bladeManagerService.setSearchFilter(f);\r\n    });\r\n\r\n    this.bladeManagerService.searchFilter$.pipe(\r\n      takeUntil(this.unsubscribe),\r\n    ).subscribe((f) => {\r\n      this.searchFilterControl.setValue(f);\r\n    });\r\n\r\n    combineLatest(\r\n      this.partyManagerService.defaultParty$,\r\n      this.gameSettingsService.gameSettings$,\r\n    ).pipe(\r\n      takeUntil(this.unsubscribe),\r\n    ).subscribe(([p, s]) => {\r\n      this.defaultPartyDesc = p;\r\n      this.defaultParty = this.partyManagerService.buildEffectiveParty(p);\r\n\r\n      if (!this.currentParty) {\r\n        this.currentPartyDesc = this.defaultPartyDesc;\r\n        this.currentParty = this.defaultParty;\r\n      }\r\n    });\r\n\r\n    combineLatest(\r\n      this.bladeManagerService.ungroupedBlades$,\r\n      this.driverFilter$,\r\n    ).pipe(\r\n      takeUntil(this.unsubscribe),\r\n    ).subscribe(([blades, driverFilter]) => {\r\n      this.driverFilter = driverFilter;\r\n      this.blades = blades;\r\n      if (driverFilter) {\r\n        this.usableBlades = blades.filter(b => !b.isHidden && b.isFound && canEngageBladeOn(b, driverFilter));\r\n      } else {\r\n        this.usableBlades = blades.filter(b => !b.isHidden && b.isFound);\r\n      }\r\n    });\r\n\r\n    this.bladeManagerService.allDrivers$.pipe(\r\n      takeUntil(this.unsubscribe),\r\n    ).subscribe((drivers) => {\r\n      this.drivers = drivers;\r\n    });\r\n  }\r\n\r\n  public applyPartyDesc(partyDesc: PartyDescription) {\r\n    this.currentPartyDesc = partyDesc;\r\n    this.currentParty = this.partyManagerService.buildEffectiveParty(partyDesc);\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  public getDriverImgStyle(partyMember?: EffectivePartyMember) {\r\n    if (partyMember) {\r\n      return {\r\n        'background-image': `url('assets/xc2/driver_icons/${partyMember.driver.id}.png')`\r\n      };\r\n    }\r\n  }\r\n\r\n  public isInBattle(partyIdx: number): boolean {\r\n    return this.currentParty && this.currentParty.partyMembers[partyIdx] && this.currentParty.partyMembers[partyIdx].inBattle;\r\n  }\r\n\r\n  public onBladeDragStart(evt: DragEvent, bladeId: string, originDriverId?: string) {\r\n  }\r\n\r\n  public onBladeDropOnCharacterBladeSlot(evt: DragDropData, partyMember: EffectivePartyMember, blade: Blade) {\r\n    const newDesc = createDescriptionFromEffectiveParty(this.currentParty);\r\n    const driver = newDesc.partyMembers.find(x => x.driverId === partyMember.driver.id);\r\n    if (canEngageBladeOn(blade, partyMember.driver)) {\r\n      engageBladeOn(driver, evt.data, blade.id);\r\n      this.applyPartyDesc(newDesc);\r\n    }\r\n  }\r\n\r\n  public onBladeDropOnCharacterEmptySlot(evt: DragDropData, partyMember: EffectivePartyMember) {\r\n    const newDesc = createDescriptionFromEffectiveParty(this.currentParty);\r\n    const blade = this.blades.find(b => b.id === evt.data);\r\n    const driver = newDesc.partyMembers.find(x => x.driverId === partyMember.driver.id);\r\n    if (canEngageBladeOn(blade, partyMember.driver)) {\r\n      engageBladeOn(driver, blade.id, undefined);\r\n      this.applyPartyDesc(newDesc);\r\n    }\r\n  }\r\n\r\n  public onCharacterSlotBladeClick(_: MouseEvent, partyMember: EffectivePartyMember, blade: Blade) {\r\n    const newDesc = createDescriptionFromEffectiveParty(this.currentParty);\r\n    const driver = newDesc.partyMembers.find(x => x.driverId === partyMember.driver.id);\r\n    removeBladeFrom(driver, blade.id);\r\n    this.applyPartyDesc(newDesc);\r\n  }\r\n\r\n  public translateParams(inParams: any): any {\r\n    const outParams: any = {};\r\n    if (inParams) {\r\n      if (inParams.bladeId) {\r\n        outParams.b = this.translateService.instant('blades.' + inParams.bladeId);\r\n      }\r\n      if (inParams.driverId) {\r\n        outParams.d = this.translateService.instant('drivers.' + inParams.driverId);\r\n      }\r\n    }\r\n    return outParams;\r\n  }\r\n\r\n  public onPartyMemberClick(partyMember: EffectivePartyMember) {\r\n    const newDesc = createDescriptionFromEffectiveParty(this.currentParty);\r\n    const driver = newDesc.partyMembers.find(x => x.driverId === partyMember.driver.id);\r\n    driver.inBattle = !driver.inBattle;\r\n    this.applyPartyDesc(newDesc);\r\n  }\r\n\r\n  public orderBy(o: BladeOrderingType) {\r\n    this.bladeManagerService.setOrdering(o);\r\n  }\r\n\r\n  public filterDriver(d?: Driver) {\r\n    this.driverFilter$.next(d);\r\n  }\r\n  public getDriverCombos(b: Blade, driverId: string): DriverComboId[] {\r\n    return b.weaponClass.driverCombos[driverId] || [];\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"my-blades-page container page-container\\\">\\r\\n  <p>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"doStuff()\\\">?!</button>\\r\\n  </p>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { TeamComputerService } from '../team-computer.service';\r\nimport { BladeManagerService } from '../blade-manager.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Blade, Driver } from '../model';\r\nimport { GameSettingsService } from '../game-settings.service';\r\n\r\n@Component({\r\n  selector: 'app-my-team-page',\r\n  templateUrl: './my-team-page.component.html',\r\n  styleUrls: ['./my-team-page.component.scss']\r\n})\r\nexport class MyTeamPageComponent implements OnInit {\r\n  private unsubscribe = new Subject<void>();\r\n  private bladePool: Blade[] = [];\r\n  private driverPool: Driver[] = [];\r\n  private currentChapter = 1;\r\n\r\n  constructor(\r\n    private teamComputerService: TeamComputerService,\r\n    private bladeManagerService: BladeManagerService,\r\n    private gameSettings: GameSettingsService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.bladeManagerService.allBlades$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe((blades) => {\r\n        this.bladePool = blades.filter(b => !b.isHidden);\r\n      });\r\n\r\n    this.bladeManagerService.allDrivers$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe((drivers) => {\r\n        this.driverPool = drivers.filter(b => !b.isHidden);\r\n      });\r\n\r\n    this.gameSettings.gameSettings$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe((gameSettings) => {\r\n        this.currentChapter = gameSettings.c;\r\n      });\r\n  }\r\n\r\n  public doStuff() {\r\n    this.teamComputerService.computeTeams(\r\n      this.bladePool,\r\n      this.driverPool,\r\n      this.currentChapter,\r\n      {\r\n        disableCharacterBladeReassignment: false,\r\n        disableRexMasterDriver: false,\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"not-found-page\\\">\\r\\n  <h1 i18n=\\\"Page Not Found title@@pageNotFound\\\">Page not found</h1>\\r\\n  <h3 i18n=\\\"YER DUN?@@as_yerDun\\\">YER DUN?</h3>\\r\\n  <p i18n=\\\"Pipqueak!@@as_pipsqueak\\\">Pipsqueak!</p>\\r\\n  <p>\\r\\n    <a class=\\\"btn btn-info\\\" routerLink=\\\"/my-game\\\" i18n=\\\"Back to My Blades link@@link_backToMyBlades\\\">\\r\\n      Back to My Game\\r\\n    </a>\\r\\n  </p>\\r\\n</div>\\r\\n\"","module.exports = \"h1, h2, h3, p {\\n  text-align: center; }\\n\\nh1 {\\n  font-weight: bolder;\\n  font-style: italic; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found-page',\r\n  templateUrl: './not-found-page.component.html',\r\n  styleUrls: ['./not-found-page.component.scss']\r\n})\r\nexport class NotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { BladeManagerService } from './blade-manager.service';\r\nimport { Blade, Driver, DriverComboId, driverCombos, ElementId, elements, RoleId, DbStatModifier } from './model';\r\nimport { uniqWith, isEqual } from 'lodash';\r\nimport { GameSettingsService } from './game-settings.service';\r\n\r\n\r\nexport interface PartyDescription {\r\n  partyMembers: PartyMemberDescriptor[];\r\n  gameChapter: number;\r\n}\r\n\r\nexport interface PartyMemberDescriptor {\r\n  driverId: string;\r\n  bladeIds: string[];\r\n  inBattle: boolean;\r\n}\r\n\r\nexport interface EffectivePartyMember {\r\n  elements: ElementId[];\r\n  driverCombos: DriverComboId[];\r\n  modifiers: DbStatModifier[];\r\n  classId: string;\r\n  roles: RoleId[];\r\n  driver: Driver;\r\n  blades: Blade[];\r\n  inBattle: boolean;\r\n  hiddenBlade?: Blade;\r\n  classModifiers: ClassModifier[];\r\n}\r\n\r\nexport interface EffectiveParty {\r\n  partyMembers: EffectivePartyMember[];\r\n  elements: ElementId[];\r\n  driverCombos: DriverComboId[];\r\n  errors: PartyError[];\r\n  gameChapter: number;\r\n}\r\n\r\nexport interface PartyError {\r\n  key: string;\r\n  params?: any;\r\n}\r\n\r\nexport interface ClassModifier {\r\n  id: string;\r\n  value: number;\r\n}\r\n\r\nfunction addBladeToParty(ep: EffectiveParty, epm: EffectivePartyMember, blade: Blade, isHidden: boolean) {\r\n  if (isHidden) {\r\n    epm.hiddenBlade = blade;\r\n  } else {\r\n    epm.blades.push(blade);\r\n  }\r\n  // Add driver combos\r\n  const equippedDriverCombos = blade.weaponClass.driverCombos[epm.driver.id];\r\n  if (equippedDriverCombos !== undefined) {\r\n    for (const dc of equippedDriverCombos) {\r\n      // Remove N/A\r\n      if (driverCombos.indexOf(dc) >= 0) {\r\n        if (epm.driverCombos.indexOf(dc) < 0) {\r\n          epm.driverCombos.push(dc);\r\n        }\r\n        if (epm.inBattle && ep.driverCombos.indexOf(dc) < 0) {\r\n          ep.driverCombos.push(dc);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add Element\r\n  if (epm.elements.indexOf(blade.element) < 0) {\r\n    epm.elements.push(blade.element);\r\n  }\r\n  if (epm.inBattle && ep.elements.indexOf(blade.element) < 0) {\r\n    ep.elements.push(blade.element);\r\n  }\r\n\r\n  // Add modifier\r\n  if (blade.db.modifier !== undefined) {\r\n    let m: DbStatModifier = epm.modifiers.find(m => m.id === blade.db.modifier.id);\r\n    if (m === undefined) {\r\n      m = {\r\n        id: blade.db.modifier.id,\r\n        value: blade.db.modifier.value,\r\n      };\r\n      epm.modifiers.push(m);\r\n    } else {\r\n      m.value += blade.db.modifier.value;\r\n    }\r\n  }\r\n}\r\n\r\nfunction buildClassModifiers(classId: string): ClassModifier[] {\r\n  switch (classId) {\r\n    case '': return [];\r\n    case 'ATK': return [{ id: 'DAMAGE', value: 1 }];\r\n    case 'HLR': return [{ id: 'POTION', value: 1 }, { id: 'STEALTH', value: 1 }];\r\n    case 'TNK': return [{ id: 'DEFENSE', value: 1 }, { id: 'ATKAGGRO', value: 1 }, { id: 'ARTSAGGRO', value: 1 }];\r\n    case 'ATK-ATK': return [{ id: 'DAMAGE', value: 2 }];\r\n    case 'ATK-HLR': return [{ id: 'DAMAGE', value: 1 }, { id: 'POTION', value: 1 }, { id: 'STEALTH', value: 1 }];\r\n    case 'ATK-TNK': return [{ id: 'DEFENSE', value: 1 }, { id: 'DAMAGE', value: 1 }, { id: 'ARTSAGGRO', value: 1 }];\r\n    case 'HLR-HLR': return [{ id: 'POTION', value: 2 }, { id: 'STEALTH', value: 2 }];\r\n    case 'HLR-TNK': return [{ id: 'DEFENSE', value: 1 }, { id: 'POTION', value: 1 }];\r\n    case 'TNK-TNK': return [{ id: 'DEFENSE', value: 2 }, { id: 'ATKAGGRO', value: 2 }, { id: 'ARTSAGGRO', value: 2 }];\r\n    case 'ATK-ATK-ATK': return [{ id: 'DAMAGE', value: 3 }];\r\n    case 'ATK-ATK-HLR': return [{ id: 'DAMAGE', value: 2 }, { id: 'POTION', value: 1 }, { id: 'STEALTH', value: 1 }];\r\n    case 'ATK-ATK-TNK': return [{ id: 'DEFENSE', value: 1 }, { id: 'DAMAGE', value: 2 }, { id: 'ARTSAGGRO', value: 1 }];\r\n    case 'ATK-HLR-HLR': return [{ id: 'DAMAGE', value: 1 }, { id: 'POTION', value: 2 }, { id: 'STEALTH', value: 2 }];\r\n    case 'ATK-HLR-TNK': return [{ id: 'DEFENSE', value: 1 }, { id: 'DAMAGE', value: 1 }, { id: 'POTION', value: 1 }];\r\n    case 'ATK-TNK-TNK': return [{ id: 'DEFENSE', value: 2 }, { id: 'DAMAGE', value: 1 }, { id: 'ARTSAGGRO', value: 2 }];\r\n    case 'HLR-HLR-HLR': return [{ id: 'POTION', value: 3 }, { id: 'STEALTH', value: 3 }];\r\n    case 'HLR-HLR-TNK': return [{ id: 'DEFENSE', value: 1 }, { id: 'POTION', value: 2 }, { id: 'STEALTH', value: 2 }];\r\n    case 'HLR-TNK-TNK': return [{ id: 'DEFENSE', value: 2 }, { id: 'POTION', value: 1 }, { id: 'ARTSAGGRO', value: 1 }];\r\n    case 'TNK-TNK-TNK': return [{ id: 'DEFENSE', value: 3 }, { id: 'ATKAGGRO', value: 3 }, { id: 'ARTSAGGRO', value: 3 }];\r\n    default: throw new Error(`Unknown class ID: ${classId}`);\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PartyManagerService {\r\n  private drivers: Driver[] = undefined;\r\n  private blades: Blade[] = undefined;\r\n  private _defaultParty$: BehaviorSubject<PartyDescription> = new BehaviorSubject(undefined);\r\n  public defaultParty$: Observable<PartyDescription> = this._defaultParty$.pipe(\r\n    filter((p) => p !== undefined)\r\n  );\r\n\r\n  constructor(\r\n    private bladeManagerService: BladeManagerService,\r\n    private gameSettings: GameSettingsService,\r\n  ) {\r\n    combineLatest(\r\n      this.bladeManagerService.allDrivers$,\r\n      this.bladeManagerService.allBlades$,\r\n      this.gameSettings.gameSettings$,\r\n    ).pipe(\r\n      filter(([d, b]) => d.length > 0 && b.length > 0)\r\n    ).subscribe(([d, b, s]) => {\r\n      this.drivers = d;\r\n      this.blades = b;\r\n      this.updateDefaults(s.c);\r\n    });\r\n  }\r\n\r\n  private updateDefaults(gameChapter: number) {\r\n    this._defaultParty$.next(this.buildDefaultParty(gameChapter));\r\n  }\r\n\r\n  private buildDefaultParty(gameChapter: number): PartyDescription {\r\n    const partyMembers: PartyMemberDescriptor[] = [];\r\n    const desc: PartyDescription = {\r\n      partyMembers,\r\n      gameChapter\r\n    };\r\n    let i = 0;\r\n    for (const d of this.drivers) {\r\n      if (!d.isHidden) {\r\n        const pm: PartyMemberDescriptor = {\r\n          driverId: d.id,\r\n          bladeIds: [],\r\n          inBattle: i < 3,\r\n        };\r\n        ++i;\r\n        partyMembers.push(pm);\r\n        switch (d.id) {\r\n          case 'REX':\r\n            pm.bladeIds.push('SEIHAI_HOMURA');\r\n            break;\r\n          case 'NIA':\r\n            pm.bladeIds.push('BYAKKO');\r\n            break;\r\n          case 'TORA':\r\n            const hanaJk = this.blades.find(b => b.id === 'HANA_JK');\r\n            const hanaJd = this.blades.find(b => b.id === 'HANA_JD');\r\n            pm.bladeIds.push('HANA_JS');\r\n            if (hanaJk && !hanaJk.isHidden && hanaJk.isFound) {\r\n              pm.bladeIds.push(hanaJk.id);\r\n            }\r\n            if (hanaJd && !hanaJd.isHidden && hanaJd.isFound) {\r\n              pm.bladeIds.push(hanaJd.id);\r\n            }\r\n            break;\r\n          case 'MELEPH':\r\n            pm.bladeIds.push('KAGUTSUCHI');\r\n            break;\r\n          case 'ZEKE':\r\n            pm.bladeIds.push('SAIKA');\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return desc;\r\n  }\r\n\r\n  public buildEffectiveParty(partyDesc: PartyDescription): EffectiveParty {\r\n    const ep: EffectiveParty = {\r\n      driverCombos: [],\r\n      elements: [],\r\n      errors: [],\r\n      partyMembers: [],\r\n      gameChapter: partyDesc.gameChapter,\r\n    };\r\n\r\n    let driversInBattle = 0;\r\n    let hasNia = false;\r\n    const matchedBlades: string[] = [];\r\n\r\n    if (partyDesc.partyMembers && partyDesc.partyMembers.length) {\r\n      for (const pm of partyDesc.partyMembers) {\r\n        const driver = this.drivers.find(d => d.id === pm.driverId);\r\n        // Skip unknown Drivers\r\n        if (driver === undefined) {\r\n          ep.errors.push({ key: 'errors.unknown-driver-id', params: { driverId: pm.driverId } });\r\n          continue;\r\n        }\r\n        // Warn for Drivers in active party beyond maximum party size\r\n        if (pm.inBattle) {\r\n          if (driversInBattle >= 3) {\r\n            ep.errors.push({ key: 'errors.too-many-drivers-in-battle', params: { driverId: pm.driverId } });\r\n          }\r\n          ++driversInBattle;\r\n        }\r\n        // Warn for Drivers used before their appointed time\r\n        if (partyDesc.gameChapter < driver.db.chapter) {\r\n          ep.errors.push({ key: 'errors.driver-time-paradox', params: { driverId: pm.driverId } });\r\n        }\r\n        // Special catgirl management - Driver edition\r\n        if (pm.driverId === 'NIA' && pm.inBattle) {\r\n          if (hasNia) {\r\n            ep.errors.push({ key: 'errors.critical-welsh-catgirl-overflow' });\r\n          }\r\n          hasNia = true;\r\n        }\r\n\r\n        const epm: EffectivePartyMember = {\r\n          driver: driver,\r\n          blades: [], // Engaged Blades\r\n          classId: undefined,\r\n          driverCombos: [],\r\n          modifiers: [],\r\n          elements: [],\r\n          hiddenBlade: undefined, // Implicit Blade (For the Mythra-Pyra problem)\r\n          inBattle: pm.inBattle,\r\n          roles: [],\r\n          classModifiers: [],\r\n        };\r\n        // const roles: RoleId[] = [];\r\n        let bladeCount = 0;\r\n\r\n        ep.partyMembers.push(epm);\r\n\r\n        // Add Blades\r\n        for (const bladeId of pm.bladeIds) {\r\n          const blade = this.blades.find(b => b.id === bladeId);\r\n          // Skip unknown Blades\r\n          if (blade === undefined) {\r\n            ep.errors.push({ key: 'errors.unknown-blade-id', params: { bladeId } });\r\n            continue;\r\n          }\r\n          // Skip blades beyond 3\r\n          if (bladeCount >= 3) {\r\n            ep.errors.push({ key: 'errors.too-many-blades-engaged-on-character', params: { bladeId } });\r\n            continue;\r\n          }\r\n          ++bladeCount;\r\n          // Special catgirl management - Blade edition\r\n          if (bladeId === 'NIA') {\r\n            if (hasNia) {\r\n              ep.errors.push({ key: 'errors.critical-welsh-catgirl-overflow' });\r\n            }\r\n            hasNia = true;\r\n          }\r\n          // Warn for Blades used before their appointed time\r\n          if (partyDesc.gameChapter < (blade.db.chapter || 2)) {\r\n            ep.errors.push({ key: 'errors.blade-time-paradox', params: { bladeId } });\r\n          }\r\n          if (matchedBlades.indexOf(bladeId) >= 0) {\r\n            // Blade is engaged multiple times\r\n            ep.errors.push({ key: 'errors.blade-engaged-multiple-times', params: { bladeId } });\r\n          } else {\r\n            matchedBlades.push(bladeId);\r\n          }\r\n\r\n          // Add role for class calculation\r\n          epm.roles.push(blade.role);\r\n\r\n          addBladeToParty(ep, epm, blade, false);\r\n\r\n          // The Mythra-Pyra problem (Rex-only)\r\n          if (partyDesc.gameChapter >= 4 && driver.id === 'REX') {\r\n            let hiddenBlade: Blade;\r\n            if (blade.id === 'SEIHAI_HOMURA') {\r\n              hiddenBlade = this.blades.find(b => b.id === 'SEIHAI_HIKARI');\r\n            } else if (blade.id === 'SEIHAI_HIKARI') {\r\n              hiddenBlade = this.blades.find(b => b.id === 'SEIHAI_HOMURA');\r\n            }\r\n            if (hiddenBlade !== undefined) {\r\n              if (matchedBlades.indexOf(hiddenBlade.id) >= 0) {\r\n                // Blade is engaged multiple times\r\n                ep.errors.push({ key: 'errors.blade-engaged-multiple-times', params: { bladeId } });\r\n              } else {\r\n                matchedBlades.push(hiddenBlade.id);\r\n              }\r\n              addBladeToParty(ep, epm, hiddenBlade, true);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Guess Class, which is the concatenated, ordered list of roles (eg. ATK-ATK-HLR or ATK-HLR-TNK)\r\n        epm.classId = epm.roles.sort().join('-');\r\n        epm.classModifiers = buildClassModifiers(epm.classId);\r\n        // Re-order elements and driver combos by their idx\r\n        epm.elements = epm.elements.sort((a, b) => elements.indexOf(a) - elements.indexOf(b));\r\n        epm.driverCombos = epm.driverCombos.sort((a, b) => driverCombos.indexOf(a) - driverCombos.indexOf(b));\r\n      }\r\n    } else {\r\n      ep.errors.push({ key: 'errors.party-is-empty' });\r\n    }\r\n    // Re-order elements and driver combos by their idx\r\n    ep.elements = ep.elements.sort((a, b) => elements.indexOf(a) - elements.indexOf(b));\r\n    ep.driverCombos = ep.driverCombos.sort((a, b) => driverCombos.indexOf(a) - driverCombos.indexOf(b));\r\n\r\n    ep.errors = uniqWith(ep.errors, isEqual);\r\n    return ep;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Blade, Driver, ElementId, DriverComboId, DriverCharaId, DriverComboMap, RoleId } from './model';\r\nimport { computeKCombinations } from './math.util';\r\n\r\n\r\n\r\nfunction testParty(\r\n  partyCombination: number[][], niaIdx: number, niaAlbumNumber: number,\r\n  byakkoAlbumNumber: number, chapter: number\r\n): boolean {\r\n\r\n  const allBladeNumbers: number[] = [];\r\n\r\n  for (let i = 0; i < partyCombination.length; i++) {\r\n    const driverBlades = partyCombination[i];\r\n    for (let j = 0; j < driverBlades.length; j++) {\r\n      const bladeAlbumNumber: number = driverBlades[j];\r\n      if (allBladeNumbers.indexOf(bladeAlbumNumber) >= 0) {\r\n        // Blade was already engaged!\r\n        return false;\r\n      } else if (niaIdx >= 0 && bladeAlbumNumber === niaAlbumNumber) {\r\n        // Trying to put Blade Nia in party when Driver Nia is in use!\r\n        return false;\r\n      } else if (\r\n        chapter < 12\r\n        && bladeAlbumNumber === byakkoAlbumNumber\r\n        && niaIdx >= 0\r\n        && i !== niaIdx\r\n      ) {\r\n        // Trying to put Dromarch on another character than Nia\r\n        // When Driver Nia is in the party!\r\n        // (Does not apply to NG+)\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction rateParty(\r\n  driverIds: DriverCharaId[],\r\n  engagedBladeSets: number[][],\r\n  bladeMap: { [albumNumber: number]: Blade }\r\n): boolean {\r\n  // Would you like some Blades with those numbers?\r\n  let b: Blade;\r\n  const partyBlades: Blade[][] = [];\r\n  const allBlades: Blade[] = [];\r\n  let driverRoles: RoleId[];\r\n  const partyRoles: RoleId[] = [];\r\n  const allElements: ElementId[] = [];\r\n  const allDriverCombos: DriverComboId[] = [];\r\n  // let score = 0;\r\n  let driverCombos: DriverComboId[];\r\n\r\n  for (let i = 0; i < engagedBladeSets.length; i++) {\r\n    partyBlades[i] = [];\r\n    driverRoles = [];\r\n    for (let j = 0; j < engagedBladeSets[i].length; j++) {\r\n      b = bladeMap[engagedBladeSets[i][j]];\r\n      allBlades.push(b);\r\n\r\n      if (allElements.indexOf(b.element) < 0) {\r\n        allElements.push(b.element);\r\n      }\r\n\r\n      if (driverRoles.indexOf(b.role) < 0) {\r\n        driverRoles.push(b.role);\r\n      }\r\n\r\n      driverCombos = b.weaponClass.driverCombos[driverIds[i]];\r\n      for (let k = 0; k < driverCombos.length; k++) {\r\n        if (allDriverCombos.indexOf(driverCombos[k]) < 0\r\n          && (\r\n            driverCombos[k] === 'BREAK'\r\n            || driverCombos[k] === 'TOPPLE'\r\n            || driverCombos[k] === 'LAUNCH'\r\n            || driverCombos[k] === 'SMASH'\r\n          )\r\n        ) {\r\n          allDriverCombos.push(driverCombos[k]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (driverRoles.length === 1) {\r\n      if (partyRoles.indexOf(driverRoles[0]) < 0) {\r\n        partyRoles.push(driverRoles[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // All elements? 200 points!\r\n  // if (allElements.length >= 8) {\r\n  //   score += 200;\r\n  // } else {\r\n  //   score += 10 * allElements.length;\r\n  // }\r\n  // All driver combos? 100 points!\r\n  // if (allDriverCombos.length >= 4) {\r\n  //   score += 100;\r\n  // } else {\r\n  //   score += 5 * allElements.length;\r\n  // }\r\n\r\n  const hasAllElements = allElements.length >= 8;\r\n  if (hasAllElements) {\r\n    const hasAllDriverCombos = allDriverCombos.length >= 4;\r\n    if (hasAllDriverCombos) {\r\n      const hasAllRoles = partyRoles.length >= 3;\r\n\r\n      if (hasAllElements && hasAllDriverCombos && hasAllRoles) {\r\n        console.log('Score!');\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n  // console.log(score);\r\n}\r\n\r\nexport interface TeamComputerOptions {\r\n  disableRexMasterDriver: boolean;\r\n  disableCharacterBladeReassignment: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TeamComputerService {\r\n\r\n  public computeTeams(\r\n    bladePool: Blade[],\r\n    driverPool: Driver[],\r\n    currentChapter: number,\r\n    options: TeamComputerOptions\r\n  ) {\r\n    // Hold on! This is going to get a bit wild.\r\n    // Also, this is brute-forcing.\r\n    // We could be smarter! We're not.\r\n    // Look! A bird lady! I want to ride that bird lady.\r\n\r\n    // First off: create driver and blade arrays and maps!\r\n    // Note that we're going to use blades by their album number\r\n    // instead of their ID string like we do in the rest of the app.\r\n    const bladeMap: { [albumNumber: number]: Blade } = {};\r\n    const bladeIdMap: { [id: string]: Blade } = {};\r\n\r\n    // Memorize special IDs for later.\r\n    let niaAlbumNumber = 0;\r\n    let byakkoAlbumNumber = 0;\r\n    let homuraAlbumNumber = 0;\r\n    let hikariAlbumNumber = 0;\r\n    for (let i = 0; i < bladePool.length; i++) {\r\n      switch (bladePool[i].id) {\r\n        case 'NIA':\r\n          niaAlbumNumber = bladePool[i].db.albumNumber;\r\n          break;\r\n        case 'BYAKKO':\r\n          byakkoAlbumNumber = bladePool[i].db.albumNumber;\r\n          break;\r\n        case 'SEIHAI_HOMURA':\r\n          homuraAlbumNumber = bladePool[i].db.albumNumber;\r\n          break;\r\n        case 'SEIHAI_HIKARI':\r\n          hikariAlbumNumber = bladePool[i].db.albumNumber;\r\n          break;\r\n      }\r\n      bladeMap[bladePool[i].db.albumNumber] = bladePool[i];\r\n      bladeIdMap[bladePool[i].id] = bladePool[i];\r\n    }\r\n\r\n    // This will contain the blade combinations per driver.\r\n    const bladeNumberCombinations: { [driverId: string]: number[][] } = {};\r\n    // And this will contain the combinations of drivers.\r\n    let driverIdCombinations: DriverCharaId[][];\r\n\r\n    // Compute all possible driver combinations.\r\n    // You can do this in your head, but we can also ask your computer to do it for us!\r\n    // Spoiler: There are 10.\r\n    // Rex/Nia/Tora\r\n    // Rex/Nia/Morag\r\n    // Rex/Nia/Zeke\r\n    // Rex/Tora/Morag\r\n    // Rex/Tora/Zeke\r\n    // Rex/Morag/Zeke\r\n    // Nia/Tora/Morag\r\n    // Nia/Tora/Zeke\r\n    // Nia/Morag/Zeke\r\n    // Tora/Morag/Zeke\r\n    if (driverPool.length > 3) {\r\n      driverIdCombinations = computeKCombinations(driverPool.map(x => x.id), 3);\r\n    } else {\r\n      driverIdCombinations = [driverPool.map(x => x.id)];\r\n    }\r\n    console.log(`Using ${driverIdCombinations.length} driver combinations!`);\r\n\r\n    // Now: Compute all possible combination of engaged blades\r\n    // for all the drivers.\r\n    // Constraint: Up to three Blades per driver at the same time.\r\n    // (Except Rex, that CHEATER, having two blades plus anywhere betwee\r\n    // one to three girls, plus possibly a catgirl, at any given time)\r\n    // Order is not important here.\r\n    // Rex's Master Driver mode will be taken care of later.\r\n    driverPool.forEach(d => {\r\n      const bladeNumbers = d.boundBlades\r\n        // Remove hidden blades\r\n        // Remove Mythra from combinations: she always comes with Pyra anyway)\r\n        .filter(x => !x.isHidden && x.id !== 'SEIHAI_HIKARI')\r\n        .map(x => x.db.albumNumber);\r\n\r\n      let combinations: number[][];\r\n\r\n      if (bladeNumbers.length <= 3) {\r\n        // No more than a full team?\r\n        // ...Well, there is really only one combination. :(\r\n        combinations = [bladeNumbers];\r\n      } else {\r\n        combinations = computeKCombinations(bladeNumbers, 3);\r\n      }\r\n      bladeNumberCombinations[d.id] = combinations;\r\n      console.log(`${d.id}: ${combinations.length} possible blade combinations!`);\r\n    });\r\n\r\n    // Now - speaking about Rex' Master Driver mode:\r\n    // Rex is Master Driver from chapter 8 onwards.\r\n    if (currentChapter >= 8 && !options.disableRexMasterDriver) {\r\n      // And he can engage Nia. And all you guys!\r\n      // But he still can't engage Poppi (she really, *really* wants that Nopon).\r\n      const bladeNumbers = bladePool\r\n        // Remove hidden blades\r\n        // Remove Mythra from combinations: she always comes with Pyra anyway)\r\n        // Remove Poppi\r\n        .filter(x => !x.isHidden\r\n          && x.id !== 'SEIHAI_HIKARI'\r\n          && x.id !== 'HANA_JS'\r\n          && x.id !== 'HANA_JK'\r\n          && x.id !== 'HANA_JD'\r\n          && x.id !== 'HANABUSTER'\r\n        )\r\n        .map(x => x.db.albumNumber);\r\n\r\n      let combinations: number[][];\r\n\r\n      if (bladeNumbers.length <= 3) {\r\n        // No more than a full team?\r\n        // Okay, this is bullshit (and impossible at this stage in the game).\r\n        // But I'll allow it!\r\n        combinations = [bladeNumbers];\r\n      } else {\r\n        combinations = computeKCombinations(bladeNumbers, 3);\r\n      }\r\n      bladeNumberCombinations['REX'] = combinations;\r\n      console.log(`REX (Master Driver): ${combinations.length} possible blade combinations!`);\r\n    }\r\n\r\n    // All right. We have all possible blade engagement combinations\r\n    // for all possible drivers.\r\n\r\n    // The lead Character Blade (Pyra/Mythra, Dromarch, Brighid, Pandoria)\r\n    // cannot be disengaged UNLESS you're on New Game +.\r\n    // We can remove all combinations that don't have them.\r\n    if (currentChapter < 12 && !options.disableCharacterBladeReassignment) {\r\n      for (const driverId in bladeNumberCombinations) {\r\n        if (bladeNumberCombinations.hasOwnProperty(driverId)) {\r\n          let bladeId: string;\r\n          // Tora is not affected (he can't be taken in battle without Poppi anyway)\r\n          switch (driverId) {\r\n            case 'REX': bladeId = 'SEIHAI_HOMURA'; break;\r\n            case 'NIA': bladeId = 'BYAKKO'; break;\r\n            case 'MELEPH': bladeId = 'KAGUTSUCHI'; break;\r\n            case 'ZEKE': bladeId = 'SAIKA'; break;\r\n          }\r\n          if (bladeId !== undefined && bladeIdMap[bladeId]) {\r\n            const bladeNumber: number = bladeIdMap[bladeId].db.albumNumber;\r\n            bladeNumberCombinations[driverId] = bladeNumberCombinations[driverId]\r\n              .filter(combination => combination.indexOf(bladeNumber) >= 0);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remap blade numbers to blades\r\n    const bladeCombinations: { [driverId: string]: number[][] } = {};\r\n\r\n    // We can now compute entire party combinations!\r\n    // With crazy constraints like:\r\n    // You can't use Nia as a Blade if she's a Driver!\r\n    // You can't use Nia as a Driver if she's a Blade!\r\n    // You can't use Byakko on Rex unless you're on New Game+ OR Nia is in her Blade form!\r\n    // You can't use a Blade on Rex if it's out on another character in the *same party*!\r\n\r\n    // I mentioned brute forcing earlier? Here it is.\r\n    // Complexity is O(d^b^n^Look! That bird lady again!)\r\n\r\n    // const partyCombinations: {\r\n    //   drivers: Driver[]\r\n    //   engagedBladeSets: number[][]\r\n    // }[] = [];\r\n    // let allParties = 0;\r\n    // let validParties = 0;\r\n    // let ratedParties = 0;\r\n\r\n    // let driverCombination: Driver[];\r\n    // let driverEngagedBladeSets: number[][][];\r\n    // let driverIds: DriverCharaId[];\r\n    // let niaIdx: number;\r\n    // let driverEngagedBladeNumbers: number[][];\r\n\r\n    // for (let i = 0; i < driverIdCombinations.length; i++) {\r\n    //   driverCombination = driverIdCombinations[i];\r\n    //   driverIds = driverCombination.map(d => d.id);\r\n    //   console.log(`Testing driver combination ${driverIds.join(', ')}: ${i + 1}/${driverIdCombinations.length}`);\r\n    //   niaIdx = driverIds.indexOf('NIA');\r\n    //   driverEngagedBladeSets = driverCombination.map(d => [...bladeCombinations[d.id]]);\r\n    //   driverEngagedBladeNumbers = [];\r\n\r\n    //   const totalCombinations = driverEngagedBladeSets[0].length\r\n    //     * driverEngagedBladeSets[1].length\r\n    //     * driverEngagedBladeSets[2].length;\r\n    //   console.log(`Checking ${totalCombinations} engaged blade combinations`);\r\n\r\n\r\n    //   for (let i0 = 0; i0 < driverEngagedBladeSets[0].length; i0++) {\r\n    //     for (let i1 = 0; i1 < driverEngagedBladeSets[1].length; i1++) {\r\n    //       for (let i2 = 0; i2 < driverEngagedBladeSets[2].length; i2++) {\r\n    //         driverEngagedBladeNumbers[0] = driverEngagedBladeSets[0][i0];\r\n    //         driverEngagedBladeNumbers[1] = driverEngagedBladeSets[1][i1];\r\n    //         driverEngagedBladeNumbers[2] = driverEngagedBladeSets[2][i2];\r\n    //         allParties++;\r\n\r\n    //         // Reinsert Mythra into the fray\r\n    //         if (\r\n    //           driverEngagedBladeNumbers[0].indexOf(homuraAlbumNumber) >= 0\r\n    //           && driverEngagedBladeNumbers[0].indexOf(hikariAlbumNumber) < 0\r\n    //         ) {\r\n    //           driverEngagedBladeNumbers[0].push(hikariAlbumNumber);\r\n    //         }\r\n    //         if (\r\n    //           driverEngagedBladeNumbers[1].indexOf(homuraAlbumNumber) >= 0\r\n    //           && driverEngagedBladeNumbers[1].indexOf(hikariAlbumNumber) < 0) {\r\n    //           driverEngagedBladeNumbers[1].push(hikariAlbumNumber);\r\n    //         }\r\n    //         if (\r\n    //           driverEngagedBladeNumbers[2].indexOf(homuraAlbumNumber) >= 0\r\n    //           && driverEngagedBladeNumbers[2].indexOf(hikariAlbumNumber) < 0\r\n    //         ) {\r\n    //           driverEngagedBladeNumbers[2].push(hikariAlbumNumber);\r\n    //         }\r\n\r\n    //         if (testParty(driverEngagedBladeNumbers, niaIdx, niaAlbumNumber, byakkoAlbumNumber, this.gameSettings.c)) {\r\n    //           validParties++;\r\n    //           if (rateParty(driverIds, driverEngagedBladeNumbers, bladeMap)) {\r\n    //             ratedParties++;\r\n    //             partyCombinations.push({\r\n    //               drivers: driverCombination,\r\n    //               engagedBladeSets: driverEngagedBladeNumbers\r\n    //             });\r\n    //           }\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n    // driverCombinations.forEach((drivers) => {\r\n    //   const combinationSets = drivers.map(d => [...bladeCombinations[d.id]]);\r\n    //   const driverIds = drivers.map(d => d.id);\r\n    //   combinationSets[0].forEach(driver0blades => {\r\n    //     combinationSets[1].forEach(driver1blades => {\r\n    //       combinationSets[2].forEach(driver2blades => {\r\n    //         const engagedBladeSets = [\r\n    //           driver0blades,\r\n    //           driver1blades,\r\n    //           driver2blades\r\n    //         ];\r\n    //         if(testParty(engagedBladeSets, driverIds)) {\r\n    //           validParties++;\r\n    //           }\r\n    //       });\r\n    //     });\r\n    //   });\r\n\r\n    // console.log(`${allParties} parties tested!`);\r\n    // console.log(`${validParties} parties valid!`);\r\n    // console.log(`${ratedParties} parties rated!`);\r\n    // console.log(`${partyCombinations.length} party combinations!`);\r\n  }\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" irouterLink=\\\"/\\\">{{'app.title'|translate}}</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\" [collapse]=\\\"isCollapsed\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/my-game\\\">\\r\\n          {{'app.my-game'|translate}}\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/my-party\\\">\\r\\n          {{'app.my-party'|translate}}\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom right\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarLangDropdown\\\" role=\\\"button\\\" dropdownToggle\\r\\n          aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"nav-dropdown-lang\\\">\\r\\n          <i class=\\\"fas fa-globe\\\"></i>\\r\\n          {{'languages.'+currentLanguage|translate}}\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarLangDropdown\\\" id=\\\"nav-dropdown-lang\\\" *dropdownMenu>\\r\\n          <a class=\\\"dropdown-item\\\" *ngFor=\\\"let language of languages\\\" (click)=\\\"selectLanguage(language)\\\">\\r\\n              {{'languages.'+language|translate}}\\r\\n          </a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n</nav>\"","module.exports = \".dropdown-toggle,\\n.dropdown-menu a {\\n  cursor: pointer; }\\n\\n.navbar {\\n  background-color: rgba(255, 255, 255, 0.8); }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil, map, distinctUntilChanged } from 'rxjs/operators';\r\nimport { GameSettingsService } from '../game-settings.service';\r\n\r\n@Component({\r\n  selector: 'app-top-navbar',\r\n  templateUrl: './top-navbar.component.html',\r\n  styleUrls: ['./top-navbar.component.scss']\r\n})\r\nexport class TopNavbarComponent implements OnInit, OnDestroy {\r\n  public isCollapsed = true;\r\n  public languages: string[] = [];\r\n  public currentLanguage = 'en';\r\n\r\n  private unsubscribe = new Subject<void>();\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private gameSettingsService: GameSettingsService,\r\n  ) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.languages = this.translateService.langs;\r\n    this.translateService.onLangChange\r\n      .pipe(\r\n        takeUntil(this.unsubscribe),\r\n        map(gs => gs.lang),\r\n        distinctUntilChanged(),\r\n    ).subscribe((lang) => {\r\n      this.currentLanguage = lang;\r\n    });\r\n\r\n    this.gameSettingsService.siteSettings$\r\n      .pipe(\r\n        takeUntil(this.unsubscribe),\r\n        map(siteSettings => siteSettings.lang),\r\n        distinctUntilChanged(),\r\n    ).subscribe((lang) => {\r\n      this.translateService.use(lang);\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  public selectLanguage(newLang: string) {\r\n    this.gameSettingsService.setLang(newLang);\r\n  }\r\n}\r\n","module.exports = \"<span [ngClass]=\\\"getClass()\\\" [attr.title]=\\\"'driver-combos.'+driverCombo|translate\\\" class=\\\"xc2-driver-combo-icon\\\"></span>\"","module.exports = \".xc2-driver-combo-icon {\\n  color: magenta; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DriverComboId } from '../model';\r\n\r\n@Component({\r\n  selector: 'xc2-driver-combo-icon',\r\n  templateUrl: './xc2-driver-combo-icon.component.html',\r\n  styleUrls: ['./xc2-driver-combo-icon.component.scss']\r\n})\r\nexport class Xc2DriverComboIconComponent implements OnInit {\r\n\r\n  @Input() driverCombo: DriverComboId;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public getClass(): any {\r\n    return {\r\n      'ra': this.driverCombo === 'BREAK',\r\n      'fas': this.driverCombo === 'TOPPLE'\r\n        || this.driverCombo === 'LAUNCH'\r\n        || this.driverCombo === 'SMASH',\r\n\r\n      'driver-combo-break': this.driverCombo === 'BREAK',\r\n      'ra-broken-shield': this.driverCombo === 'BREAK',\r\n\r\n      'driver-combo-topple': this.driverCombo === 'TOPPLE',\r\n      'fa-undo-alt': this.driverCombo === 'TOPPLE',\r\n      'fa-rotate-270': this.driverCombo === 'TOPPLE',\r\n      \r\n      'driver-combo-launch': this.driverCombo === 'LAUNCH',\r\n      'fa-arrow-up': this.driverCombo === 'LAUNCH',\r\n\r\n      'driver-combo-smash': this.driverCombo === 'SMASH',\r\n      'fa-arrow-down': this.driverCombo === 'SMASH',\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"xc2-element-icon\\\" [attr.title]=\\\"'elements.'+element|translate\\\" [ngStyle]=\\\"{'background-image':'url(\\\\'assets/xc2/elements/'+element+'.png\\\\')'}\\\"></div>\"","module.exports = \":host {\\n  width: 20px;\\n  height: 20px;\\n  display: block; }\\n\\n.xc2-element-icon {\\n  height: 100%;\\n  width: 100%;\\n  background-size: contain;\\n  display: block; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ElementId } from '../model';\r\n\r\n@Component({\r\n  selector: 'xc2-element-icon',\r\n  templateUrl: './xc2-element-icon.component.html',\r\n  styleUrls: ['./xc2-element-icon.component.scss']\r\n})\r\nexport class Xc2ElementIconComponent implements OnInit {\r\n  \r\n  @Input() public element: ElementId;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<span [ngClass]=\\\"getClass()\\\" [attr.title]=\\\"'roles.'+role|translate\\\" class=\\\"xc2-role-icon ra\\\"></span>\"","module.exports = \".role-tnk {\\n  color: blue; }\\n\\n.role-hlr {\\n  color: green; }\\n\\n.role-atk {\\n  color: red; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RoleId } from '../model';\r\n\r\n@Component({\r\n  selector: 'xc2-role-icon',\r\n  templateUrl: './xc2-role-icon.component.html',\r\n  styleUrls: ['./xc2-role-icon.component.scss']\r\n})\r\nexport class Xc2RoleIconComponent implements OnInit {\r\n\r\n  @Input() public role: RoleId;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public getClass(): any {\r\n    return {\r\n      'role-atk': this.role === 'ATK',\r\n      'ra-sword': this.role === 'ATK',\r\n      'role-hlr': this.role === 'HLR',\r\n      'ra-health': this.role === 'HLR',\r\n      'role-tnk': this.role === 'TNK',\r\n      'ra-shield': this.role === 'TNK',\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}